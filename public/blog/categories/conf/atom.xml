<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: conf | Jake Trent]]></title>
  <link href="http://jaketrent.com/blog/categories/conf/atom.xml" rel="self"/>
  <link href="http://jaketrent.com/"/>
  <updated>2017-01-05T13:38:38-07:00</updated>
  <id>http://jaketrent.com/</id>
  <author>
    <name><![CDATA[Jake Trent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Strange Loop and Elm Conf 2016 Review]]></title>
    <link href="http://jaketrent.com/post/strange-loop-elm-conf-2016-review/"/>
    <updated>2016-09-20T11:38:00-06:00</updated>
    <id>http://jaketrent.com/post/strange-loop-elm-conf-2016-review</id>
    <content type="html"><![CDATA[<p>Here's a quick conference review and some highlight bullets from some of my favorite parts.  It was my first time going to Strange Loop.  It was also host to the first Elm Conf ever.  I was excited to go to both.  I was looking for new, eclectic content to consider.  I was not disappointed.</p>

<p><img src="http://i.imgur.com/SusCISQ.jpg" alt="strange loop and elm-conf" /></p>

<!--more-->


<h2>Venue</h2>

<p>The city was awesome.  I got to hang out and explore St. Louis quite a bit.  I hadn't been there since I was a small child.  There's a great, historic downtown area.  The stonework is inescapable and very impressive.  Great craftsmanship on display from a fun era of architecture.  Highlights were the many elegant cathedrals and churches, including the <a href="https://en.wikipedia.org/wiki/Cathedral_Basilica_of_Saint_Louis_(St._Louis">Cathedral Basilica</a>).</p>

<p><img src="http://i.imgur.com/6RHY7b6l.jpg" alt="cathedral bascillica" /></p>

<p>I had a good time visiting Forest Park, which is host to some great parks and a cool art museum which houses a wide variety of impressive paintings, sculpture, pottery, artifacts, etc.</p>

<p><img src="http://i.imgur.com/nIufoSal.jpg" alt="cool art representing america, wish I captured the info plaque better" /></p>

<p>Union Station was the site of Elm Conf and the hotel for the conference.  It's built in a historic train station.  Parking was under the open rafters of the apparent train yard.  The lobby is in the grand hall of the main station where they do light shows on the ceiling on the hour after 6pm.</p>

<p><img src="http://i.imgur.com/lT2TcbTl.jpg" alt="union station hotel" /></p>

<p>The Peabody Opera House was the site of all sessions for Strange Loop proper.  It's also an impressive venue, with an especially beautiful stage and impressive hall.  I could actually fit in the theatre seats too, so I was impressed.</p>

<p><img src="http://i.imgur.com/5uo4devl.jpg" alt="peabody opera house stage" /></p>

<h2>Content</h2>

<p>The content was interesting and engaging.  The speakers were all quite good.  As with any conf, there are low points, but the average here was high and the lows few.  The talks were mostly technical, some deep, a few shallower.  There were a couple good soft and thought talks as well.  What I was going for, I got, which was <em>variety</em>.  I feel like my exposure at this conference was broad.</p>

<p>Language themes emerged around Elm, Clojure, Scala, and I think I was getting a general Java vibe there as well.  As a top tech, distributed commit logs in the form of Kafka and Kinesis were mentioned multiple times.</p>

<h2>Hosting</h2>

<h4>Food</h4>

<p>Elm-conf had coffee and a few small snacks provided.  It didn't provide meals.  Somehow this was unclear to me.  Apparently there was a way to tack this on to your experience at registration that I missed.  In the end, I enjoyed going out to the city and finding something good with new friends, but that wasn't my initial expectation.  At Strange Loop, the Peabody Opera House provided breakfast, lunch, and snacks.  They were all solid and good.  In the end, I was made more solid and good.  Best food in the city I had was the day before the conf, when we visited Blues City Deli, and I ordered the Aporkalypse, a drippingly-delicious sandwhich of pork and more pork in the form of bacon.  Mmmm!, so good.</p>

<p><img src="http://i.imgur.com/AAdpY4Dl.jpg" alt="blues city deli" /></p>

<h4>Swag</h4>

<p>There was eventually a conference T-shirt.  Black.  With a coolish logo on it, that I had to ask about.  I'm still one of three people in the country who have not seen Stranger Things.  Apparently the logo was based on that show's logo.  There were a few vendors.  I got lucky with one of the contests.  That was awesome.  But holy cow, where were the stickers?  Apparently that's not a strong part of this conference's culture.  I got one cool sticker from Netflix -- Chaos Monkey :D.</p>

<h4>Party</h4>

<p>The conference party was at the singular City Museum.  It's not really a museum?  It's more like an anything-goes, go explore this, based on psychonauts concept art, adult playground.  I say adult because no where are predictable, little tikes-sized, plastic-covered platforms and slides.  Everything's made out of exposed rebar, inconvenient, twisted, gnarly, mixed with random art installments, and generally evoking of my laughter.  If you go to St. Louis, you just need to experience it.</p>

<p><img src="http://i.imgur.com/55iusyGl.jpg" alt="city museum st louis" /></p>

<p>In addition to the general review, here are some learnings that stood out to me:</p>

<h2>Some Favorite Talks</h2>

<h4><a href="https://youtu.be/DSjbTC-hvqQ">"Code is the Easy Part"</a> - Evan C - NoRedInk</h4>

<ul>
<li>Alternatives make each community stronger - we can gravitate around things we thing are good, beautiful, and we don't have to partake in what we don't like.  We don't have to rain on those parades either.</li>
<li>Are bigger teams better? "Not really" Some things that are great about Elm haven't really been matched over even long time periods and with many resources.  (eg, great error messages, fast rendering)  Can have great products from small teams.</li>
<li>Most people would judge a great open source project by those that get issues and resolve them immediately, keeping open issues at 0.  But Evan batches issues, letting them pile up, then designing around trends to maximize value and consider good design.</li>
<li>Upcoming versions of Elm will focus on: debugger, code swapping, server render, packages improvements</li>
</ul>


<h4><a href="https://youtu.be/IcgmSRJHu_8?list=PLglJM3BYAMPH2zuz1nbKHQyeawE4SN0Cd">"Making Impossible States Impossible"</a> - Richard Feldman - NoRedInk</h4>

<ul>
<li>Less to test is good. Nothing to test is better because it's impossible.</li>
<li>Expose functions to access data - can control data access, structure for upgrades and refactor</li>
<li>Make new types as combos of new fields are added to a data structure</li>
<li>Spend time to design data structures and types to only allow valid states</li>
</ul>


<p>Strange Loop and Elm Conf both did a great job hiring some solid videographers who did good video capture work and had it up incredibly fast.  I was browsing videos on Youtube at lunch that were just presented in the morning!</p>

<ul>
<li><a href="https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw/videos">Strange Loop on YouTube</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLglJM3BYAMPH2zuz1nbKHQyeawE4SN0Cd">Elm Conf on YouTube</a></li>
</ul>


<h2>Some Cool Ideas</h2>

<ul>
<li>NoRedInk - Hiring after Elm adoption expanded greatly - "python paradox" - no programmers, but easier to hire/find a team because of tech interest and niche. (segment from <a href="https://www.youtube.com/watch?v=LCNs92YQjhw&amp;feature=youtu.be&amp;t=7m55s">"Elm conf Q&amp;A panel"</a> by Evan Czaplicki and Richard Feldman)</li>
<li>In elm, most things not be a component, but a "triplet" - model view update - (segment from <a href="https://www.youtube.com/watch?v=LCNs92YQjhw&amp;feature=youtu.be&amp;t=21m09s">"Elm conf Q&amp;A panel"</a> by Ossi)</li>
<li>Local concision is nice - I don't have to visit tons of files to make a change (eg, EJB) (somewhere in <a href="https://www.youtube.com/watch?v=VNTQ-M_uSo8&amp;feature=youtu.be">"Agility and Robustness: Clojure spec"</a> by Stuart Holloway)</li>
<li>Clojure spec attempts to find a best-of-both world approach, being a thing kind of like typings and kind of like example testing.  Maintains generalized systems, dynamic types of clojure.  But allows for specificity, such as data shape definitions where desired.  Seems like it could be really cool.  A bit of a mind blow.  (segment from <a href="https://www.youtube.com/watch?v=VNTQ-M_uSo8&amp;feature=youtu.be&amp;t=9m09s">"Agility and Robustness: Clojure spec"</a> by Stuart Holloway)</li>
<li>Some well-loved tools (eg, React, Gemfile, and Git) are loved by us because they use pure functions leading to better mental models.  Obvious looking back, but was non-obvious to start.  We should build more tools this way. (<a href="https://mobile.twitter.com/garybernhardt/status/777901423220490240">tweet</a> about "Reproducability" by Gary Bernhardt)</li>
<li>Parable of pumpkin carver (segment from <a href="https://www.youtube.com/watch?v=_1rh_s1WmRA&amp;feature=youtu.be&amp;t=22m25s">"A Frontend Server, Front to Back"</a> by Zach Tellman)</li>
<li>Nice to have abstractions, but it might be too much work to build a "big tower of abstraction" with a bunch of new terms and concepts just for 300 lines of well-factored code. (somewhere in <a href="https://www.youtube.com/watch?v=_1rh_s1WmRA&amp;feature=youtu.be">"A Frontend Server, Front to Back"</a> by Zach Tellman)</li>
</ul>


<h2>Some Cool Projects</h2>

<ul>
<li><a href="https://github.com/sporto/hop">hop</a> - elm router</li>
<li><a href="https://github.com/mdgriffith/elm-style-animation">elm-style-animation</a> - tweeing values for animation</li>
<li><a href="https://github.com/abadi199/elm-horizon">elm-horizon</a> - serverless realtime frontend experiment</li>
<li><a href="https://www.atomist.com/">atomist</a> - yet-to-be-released  project for elm code gen <a href="https://youtu.be/jJ4e6cIBgYM">demo talk</a></li>
<li><a href="http://petstore.swagger.io/#/">swagger.io</a> - API documentation</li>
<li><a href="http://johnny-five.io/">johnny-five</a> - write nodejs on top of arduinos</li>
<li><a href="https://ravichugh.github.io/sketch-n-sketch/">sketch-n-sketch</a> - prototype tool for syncing code and direct manipulation tools for making vector art <a href="https://www.youtube.com/watch?v=YuGVC8VqXz0">demo talk</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bring Your Listeners With You]]></title>
    <link href="http://jaketrent.com/post/bring-your-listeners-with-you/"/>
    <updated>2016-03-20T09:03:00-06:00</updated>
    <id>http://jaketrent.com/post/bring-your-listeners-with-you</id>
    <content type="html"><![CDATA[<p>Remember that last time that you spoke at a conference and really felt like you had connected with your audience?  You were able to keep them with you for the length of your journey.  You felt like they grew and were enlightened with you.  There's a certain magic to that, and there's also some deliberate thought you can give the experience that will help it happen more often.</p>

<p><img src="http://i.imgur.com/keI6970.jpg" alt="Speaking" /></p>

<!--more-->


<h2>Set Expectations</h2>

<p>Start settings expectations in the abstract for your talk.  If you set accurate expectations, you'll be more likely to get the right audience.  I'm all for fun descriptions.  Also make sure it is very clear what the subject is, the format of the talk, and the desired outcome.  Use keywords that will be tipoffs, such as "with code", "high-level concepts", "preview of pre-release tech", or "soft skill".</p>

<p>Set expectations at the beginning of the talk.  This will help focus the learners on what is to be accomplished.  Even if your talk wasn't what they had originally imagined, they will be able to adjust to a mindset more aligned with the topics that you are to cover.  They'll setup a mental bin for the new information to go in.  They'll create mental hooks that they can connect the new information you're sharing to their previous experience.</p>

<p>Set expectations in the topic or activity transitions.  When you change gears, state that you're doing so.  By doing this, you'll be less likely to lose learners along the way.  Just as in the beginning, you'll set up a context for what's coming.</p>

<h2>Clear Definitions</h2>

<p>The ground that you're about to cover in your talk will be very alien to some.  They may have no background in your topic.  The broad spectrum of learner backgrounds is a challenge in any talk.  If you want to bring as many learners as possible into unknown territory, be willing to take a moment and establish clear definitions.  You don't have to teach advanced topics from the ground up every time.  Again, expectations in your talk's abstract will help with this.  But if you want to allow new learners the opportunity to file away as much useful information as possible, give some basic definitions to serve as a mental foundation.</p>

<p>Even though it may be repetitive for the advanced learner, it may still be useful for them as a reminder or showing some nuance in your own perspective that they didn't have before.  Once you establish the definitions and use that language consistently as you glob on new concepts in your talk, it will be easier to listeners to keep up and associate concepts more easily.</p>

<h2>Show Variety</h2>

<p>You will need to be able to keep attention in addition to just sharing pure information.  If people aren't willing to put down their twitter stream and pay attention, the information you are speaking into the air will go straight to /dev/null.</p>

<p>There is an entertainment value that can increase the total effectiveness of your talk.  It shouldn't usually be the core of your talk or main reason for people to come hear you, but it can help.  Be light-hearted.  Help people laugh.  Smiling, laughing people learn better.  Vary your voice in volume, speed, and expression to recapture attention.  Spend time on engaging visual aids (the good ones really do take a fair amount of time to produce).</p>

<h2>Let Them Go</h2>

<p>Your learners must trust you to come with you to the conceptual place that you're going.  Be worthy of that trust.  Get to assigned room and start on time.  When the session time is over, end.  This is the respectful thing to do.  Prepare for the eventuality of bad timing estimates or technical difficulties or venue problems.  Have your material available online for later.</p>

<p>It is good to say, "I'm over time.  We have just a little more to cover.  You can get up and leave if you'd like.  It'll be ok.  I'm going to go quickly."  It's better to say, "We're at time.  The material is available at jaketrent.com/blogPost.  Please talk to me afterward and on Twitter @jaketrent.  Thank you for coming."  When time is up, wrap it up and end.</p>

<p>Being able to take listeners with you on a mutual teaching and learning experience is a great privilege.  It takes preparation, work, and a bit of jit magic.  These are a few ideas.  What other ideas do you have for helping learners come along with you in that experience?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fluent Conf Review]]></title>
    <link href="http://jaketrent.com/post/fluent-conf-review/"/>
    <updated>2016-03-15T06:37:00-06:00</updated>
    <id>http://jaketrent.com/post/fluent-conf-review</id>
    <content type="html"><![CDATA[<p>I went to my first <a href="http://conferences.oreilly.com/fluent/javascript-html-us">Fluent conf</a> this year.  It was a generally good experience.  I enjoyed the company and the topics.  Maybe I'll go again.</p>

<p><img src="http://i.imgur.com/aG1CC3U.jpg" alt="Fluent Conf" /></p>

<!--more-->


<h2>Training</h2>

<p>I went to the one-day training before the conference, where there were half and quarter day sessions around a single topic.  I went to an awesome "Building a desktop app with Electron" training, where the content was great, the teacher, Steve Kinney, was exceptional, and I felt accomplished as we learned new things and got to create something together with my own typing fingers.  It went very quickly and probably could have been a bit more solid with even a full day of training.</p>

<p>I did two other trainings that weren't nearly as good.  The people were smart, imparting what obviously took some brains to figure out, but they weren't engaging as teachers and couldn't capture my attention well enough to make me feel like I was along for the ride.  Pre-conference prep material suggested that we'd be producing something together in these sessions as in the Electron session.  That would have been awesome.  I am a kinetic learner.  Unfortunately, there was no attempt to build upon pre-session work, and both other sessions felt dull in comparison to the morning's ride.</p>

<h2>Keynotes</h2>

<p>The mix of keynotes was great at the conference.  There were some heavy hitters: Brendan Eich and Doug Crockford.  There were some new, refreshing faces and topics from the likes of Laurie Voss and Alex Russell.  The keynotes were shorter than others I've seen -- shorter than even the other sessions.  They felt almost like lightning talks, but from big web tech personalities.  The content was varied.  The delivery was all very good.  These were high points in the conference.</p>

<h2>Sessions</h2>

<p>The sessions were mostly good.  I have a general like-dislike relationship with conference talks.  I have to remember that the point is not to be permanently changed at the end of the talk or to have immediately picked up some great new skill.  The probable best place that I can be at the end of a session is inspired, pointed in a new, interesting direction, with enough information to know what I don't know and go figure it out.</p>

<p>There was a ton of content, with 6 tracks most hours.  Some of the highlight talks that I went to were: "This talk is not available offline", by Alex Rickabaugh, talking about "Progressive Web Apps", Service Workers, and how to create a more native-like web experience; "How to write a worthwhile test", by Justin Searls, which was chock full of valuable insight for test creation and tooling; and "Building our reactive future", by Matthew Podwysocki, talking about Rx.js and how Observables are expressive coding constructs -- he was hilarious too.  I'm sure I missed some other great ones.  Should I have bought that expensive "watch the recorded videos later" package?</p>

<p>I did attend a few less-than-stellar sessions, during which I read all the docs on <a href="http://cycle.js.org/">Cycle.js</a> and worked through all the examples.  It's a super interesting framework and fit in with a large tech theme from the conference, <a href="http://reactivex.io/documentation/observable.html">Observables</a>.</p>

<h2>Venue</h2>

<p>San Fransisco is a fun city.  I love walking around the city.  It was unfortunately unusually overcast and drizzly weather while we were there.  We had less rain than was forecast, so that was good, and we were able to get out into the city at night.  Perhaps because of all the cloud cover, it seemed like it was always super late by the time we got out.</p>

<p>The conference was all held inside the Marriot Marquee.  It was held in the basement.  There were no windows.  Thankfully, they had good HVAC to mostly evacuate all the nerd smell.  It was funny going in the first time, because you go down about 3 flights of escalators, making it feel like you're on your way to the subway.  I don't know how many 1000+ attendees there were, but it was amazing that the hotel had that much space.  The basement must have extended underground underneath the adjoining plaza.  The Marriot was nice.  The staff were very friendly.  There was the strict policing of badge checking at most entrances -- that was annoying.</p>

<p>Getting to and from San Fransisco proved laborious with a hefty layover on the way in and a hefty delay getting out, due to weather.  This task alone made me consider just buying the virtual conference option next time.  It was fun to meet a bunch of people from all over the globe though.  Perhaps they could all come visit me in the Rocky Mountains next time, and we could party here.</p>

<h2>Food</h2>

<p>Lunches were good.  The food was good and interesting.  The lines went quickly, especially on day 2, where it seemed that they had 12 independent lines for lunch.  That was awesome.  Apparently I just got lucky the first day.  There were enough people that a proper dinner and after party didn't happen.  There was a reception the first night, which consisted of an hour of other people drinking alcohol.  I had a water.  Water from Norway never tasted so good.</p>

<h2>Swag</h2>

<p>The conference gave out water bottles.  They were on a shelf in the hall.  Oh, and they gave out name tags.  Beyond that, there was an exhibition hall with vendors giving out the usual -- stickers, t-shirts, and trinkets.  I love a good sticker and found quite a few.  Github had the best.  Codeschool had some awesome ones too, such as 80s neon "Staying Sharp with Angular".  So good.  I also replenished my summer wardrobe of T-shirts.  Heroku did go beyond T-shirts, which is a trend we should encourage, and now I have some rockin' purple socks.</p>

<h2>Going Again</h2>

<p>Fluent was a great experience and a highlight web conference for the year.  I've heard it has been even better in years past.  It's probable that I'd go again to try it out again and hope for an even better experience.  Thanks, Fluent, and I'll see you next time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mountain West JavaScript Review]]></title>
    <link href="http://jaketrent.com/post/mtnwest-javascript-review/"/>
    <updated>2014-03-25T11:45:00-06:00</updated>
    <id>http://jaketrent.com/post/mtnwest-javascript-review</id>
    <content type="html"><![CDATA[<p>MountainWest JavaScript was a great conference last week.  It was a jubilee. Well, if you can have a jubilee in the first year of a conference.   Here's my take.</p>

<p><img src="http://i.imgur.com/VGtnQzX.png" alt="MtnWest JavaScript" /></p>

<!--more-->


<h2>Format</h2>

<p><a href="http://mtnwestjs.org/">MountainWest JavaScript</a> started this year as a part of the larger Mountain West conference set, including <a href="http://mtnwestdevops.org/">devops</a> and <a href="http://mtnwestrubyconf.org/">Ruby</a> as well.  It was two full days.  There is a single track -- everyone (that stays) hears everything.  Love both these features.  Splitting the disciplines into separate conferences is genius.</p>

<h2>Speakers</h2>

<p>The speaker lineup was exceptional.  There were many great minds assembled, fun experience shared, and great companies represented.  Following <a href="/post/ng-conf-review/">ng-conf</a> earlier this year, I was again pleasantly surprised at the amount of great content.  I did not attend the devops or ruby portions, but it has been said by some that they were not as exceptional.</p>

<p>Thanks to the organizers for selecting great content and presenters.  Thank you to all the speakers for preparing some killer talks.</p>

<h2>Topics</h2>

<p>The mix of topics seemed relevant and varied.  This was welcome.  There was just a bit of overlap on some topics.  Conference organizers put similar topics together, which was fine.  But in one case, the back-to-back speakers, from the same company and essentially the same topic had so much overlap that it was obvious.  Repetition is good, but it should be done in front of the YouTube recording of a single, great talk on the subject.  The conference was recorded, so hopefully we can see the sessions online soon.</p>

<h2>Venue</h2>

<p>The conference met at the Salt Lake City Public Library.  It's a great city.  It's a cool building.  It has a location close to public transit lines.  The stadium seating in the conference room is good for visibility but bad for knees.  There were plenty of power sources.</p>

<p>Despite these good points about the location, I found myself not super-excited about showing up at the library for another conference.  I feel like it's time for something fresh.</p>

<h2>Swag</h2>

<p>There was a nice shirt with mysterious symbols emblazened across the front.  Ruby was discernable.  I'm still up in the air over which represents JavaScript or devops.  There was also a nice, laminate sticker that they gave out with the conference logo.  Sponsors gave out nothing.  I was hoping for an O.C. Tanner gold bracelet and Instructure panda hoodie.  There was also a stunning lack of sweet treats and lunch. :(  In the place of actual food, there was an especially long, 2-hour lunch break -- oh, and a lot of water.</p>

<h2>I'd Go Again</h2>

<p>I'd definitely go again if the speaker and topic lineup seemed as promising as it turned out to be this year.  Next year, hopefully I'll attend at a different location in Salt Lake City and enjoy a chocolate eclair whilst learning about how I can actually use es6 features in the then-current evergreen browsers.</p>

<h2>My Notes</h2>

<p>As I've indicated, there were many topics touched upon that were interesting and helpful.  I've included my chicken scratch below (if you can actually type chicken scratch), mostly so you can grab some hyperlinks if you'd like.</p>

<p>```</p>

<p>react.js - Pete Hunt - made react look very interesting from a perspective of the underlying ideas</p>

<pre><code> - jsx - http://facebook.github.io/react/docs/jsx-in-depth.html
 - virtual dom
 - simplicity over familiarity
  - riot.js - super-small mvp lib - https://moot.it/riotjs/docs/
</code></pre>

<p>macros - James Long -</p>

<pre><code> - sweet.js
</code></pre>

<p>async js - Jafar Husain - simplicity of event handling, handling of race conditions, and description of handling looked very compelling</p>

<pre><code> - observable - combine iterator (‘i’m done’) with event (pub sub)
 - events are just arrays
 - vector programming - transformations over collections
 - practice and learn - http://jhusain.github.io/learnrx/
</code></pre>

<p>async -</p>

<pre><code> - same bit as above
 - rxjs - http://reactive-extensions.github.io/RxJS/ - https://rx.codeplex.com/
 - Reactive Manifesto - http://www.reactivemanifesto.org/
</code></pre>

<p>ball of mud - Brandon Hays - most entertaining; great</p>

<pre><code> - Ball of mud architecture - http://laputan.org/mud/
 - @tehviking
</code></pre>

<p>TDD ember - Andy Pliszka</p>

<p>Screenreaders - Ryan Florence - a humanistic appeal to do the right thing and help those with disabilities on the web</p>

<pre><code> - aria-role
</code></pre>

<p>seo - Jeff Whepley</p>

<pre><code> - fragment spec
 - make server render substates, js can pick up
</code></pre>

<p>teach kids js - Liz Abinante - fun and light encouragement to share programming concepts with children</p>

<pre><code> - children are moldable
 - creative, imagination
 - not limited by inhibitions
 - start early, have time for mastery by young age.
</code></pre>

<p>modules, packages - Guy Bedford</p>

<pre><code> - traceur - still use
 - es6-module-loader - es6 loader polyfill - used by addy osmani’s todomvc - http://addyosmani.github.io/todomvc-backbone-es6/
 - systemjs - shim require on top of es6 loader polyfill
 - jspm.io + systemjs - https://github.com/systemjs
 - addy osmani’s todomvc rewrite experience - http://blog.tastejs.com/rewriting-a-webapp-with-ecmascript-6
</code></pre>

<p>web animation - Jeremy Kahn</p>

<pre><code> - detect end of css animation - http://blog.teamtreehouse.com/using-jquery-to-detect-when-css3-animations-and-transitions-end
 - edit keyframe animation via js - https://github.com/jlongster/css-animations.js
 - js tweening - https://github.com/jeremyckahn/shifty/
 - stylie - viz tool create keyframe animation
</code></pre>

<p>hardware hack - Jamisson Dance</p>

<pre><code> - npm - johnny-five - node arduino
 - npm - xbox-controller
 - parrot ar drone
      - “That’s against the spirit of node to use something when you could rewrite it yourself.”
 - arduino uno w/ breadboard - ~$100
</code></pre>

<p>flight.js - Kassandra Perch</p>

<pre><code> - slides - http://kperch.github.io/mtn_west/
</code></pre>

<p>node error handling - Jamund Ferguson</p>

<pre><code> - Kraken - on top of express - https://github.com/paypal/kraken-js
 - try/catch - for json.parse
 - callback - first param is err
 - custom error - custom name, attach custom data (e.g., ServerError has a list of services hitting, ports, etc)
 - process.on(‘uncaughtException’) must always process.exit()
 - handle errors in middleware - call next w/ error as first param, call return right after
 - use default error handler in express - app.use(function (err, req, res, next) { res.send(500, etc) })
 - node core notes - https://nodefirm.hackpad.com/Node-Error-Handling-Summit-uXFi4FUg8Td
</code></pre>

<p>client error handling - Todd Gardner</p>

<pre><code> - error handling service - http://trackjs.com/
 - name your inner functions
 - stacktrace.js - normalizes format of stack trace
 - tracekit.js - get stack traces in old browsers
 - zone.js - long stack traces across async events
</code></pre>

<p>gulp - Eric Schoffstall</p>

<pre><code> - getfractal
 - still has problems with 3rd-party file-based builds, such as require.js
 - github.com/substack/stream-handbook
</code></pre>

<p>canvas animation - Josh Robertson</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ng-Conf Review]]></title>
    <link href="http://jaketrent.com/post/ng-conf-review/"/>
    <updated>2014-01-24T07:22:00-07:00</updated>
    <id>http://jaketrent.com/post/ng-conf-review</id>
    <content type="html"><![CDATA[<p>Ng-Conf just happened last week in Salt Lake City, Utah.  It was awesome.  Oh blast, I blew the punch line.  Anyway, here's my take.</p>

<p><img src="http://i.imgur.com/4swtO6x.jpg" alt="ng-conf" /></p>

<!--more-->


<h2>Format</h2>

<p>Two days.  Early 'til late.  One track.  20-40 min talks virtually back to back.  Lightning'y?  When we broke for lunch, I felt relieved.  My brain could go into some low-power mode.  Breaks between talks were mostly announced as anywhere from 30 seconds to 3 minutes, this whilst yammering off a short list of swag winners.  The format encouraged content, and there was a lot of it!</p>

<h2>Line Up</h2>

<p>The conference was easy to look forward to.  Looking at the speaker list, I was immediately impressed.  At one point during the event, Aaron Frost said that they hoped if the Angular team would come that they'd get more attendees.  Yes, that was a draw.  It was fun having them there.  Core.  Very core.  I believe that about each member of the team took the stage over the two days.</p>

<p>The speaker list in total was very impressive.  There was a good mix of local and remote talent who came together to cover a broad array of Angular and JavaScript-related topics.</p>

<h2>Talk Quality</h2>

<p>Talk for talk, just numbers-wise, it was definitely one of the most high quality conferences I've attended.  Of course, there were some less-than-stellar presentations.  But, on the whole, I was more than impressed by the subject mastery and teaching ability of the speakers.  Thank you to everyone who prepared.</p>

<p>There were also some definite highlights: Dave Smith on directives, Vojta Jina on DI, Brian Ford on zone.js, and Julie Ralph on Protractor.</p>

<p>And one of the best parts is that each of these talks was recorded on video for a livestream and <a href="http://www.youtube.com/user/ngconfvideos">on youtube for later viewing</a>.</p>

<h2>Venue</h2>

<p>The conference was held at the Little America hotel in Salt Lake City.  It was a beautiful location.  The combined main ballrooms that the talks were held in were awesome.  Plenty of marble.  The food was great.  There weren't tons of snacks, but that was probably good for my health.  The air quality in Salt Lake during the conference wasn't good.  In fact, oobleck!  But, I didn't get food poisoning -- plus!</p>

<h2>Smooth</h2>

<p>I heard it said by multiple people during the conference that it was the best first-time conference they had attended.  Indeed, everything went Domo smooth.  The content was the star.  It was fun.  It was energetic (minus some confusing lack of screaming for all the sweet swag -- probably had something to do with the sheer amount, like clapping for the 3rd curtain call).  The AV crew did a fantastic job.  Usually, it's annoying to sit in an audience as video or audio problems plague the start of a talk.  That simply did not happen here, and it was oh, so refreshing.</p>

<p>Oh yeah, and sweet jacket!</p>
]]></content>
  </entry>
  
</feed>
