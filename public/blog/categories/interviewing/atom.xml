<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: interviewing | Jake Trent]]></title>
  <link href="http://jaketrent.com/blog/categories/interviewing/atom.xml" rel="self"/>
  <link href="http://jaketrent.com/"/>
  <updated>2016-03-14T16:24:09-06:00</updated>
  <id>http://jaketrent.com/</id>
  <author>
    <name><![CDATA[Jake Trent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Some Node Skills to Explore]]></title>
    <link href="http://jaketrent.com/post/node-skills-explore/"/>
    <updated>2016-01-26T10:00:00-07:00</updated>
    <id>http://jaketrent.com/post/node-skills-explore</id>
    <content type="html"><![CDATA[<p>We are hiring a bunch of Node.js developers at the moment.  You may be as well.  I'm sure you have a good list of skills that you're looking for in developers that join your posse.  Here are a few <em>technical</em> things I think about when getting the opportunity  to sit down with a Node developer.</p>

<p><img src="http://i.imgur.com/9WglUIw.jpg" alt="Exploring Node Skills" /></p>

<!--more-->


<p>What might you add to the list?</p>

<h2>Async Programming</h2>

<ul>
<li>What are options for async flow control?  Favorites?  Least?  Pros?  Cons?</li>
<li>Node event loop -- How does it work?  What applications does it fit?</li>
</ul>


<h2>Error Handling</h2>

<ul>
<li>Limitations/advantages in handling async errors?</li>
<li>Handle errors in Promises?</li>
<li>Handle errors in callbacks?</li>
<li>What errors should be thrown?</li>
</ul>


<h2>Functional</h2>

<ul>
<li>What is immutability?  Why want it?</li>
<li>Basic Array.prototype methods?</li>
<li>What does shared state give you?</li>
<li>Advantages to pure functions?</li>
<li>Applications of higher-order functions?</li>
</ul>


<h2>API</h2>

<ul>
<li>Specifically, how does CORS work?</li>
<li>Familiar with which request and response formats?  Favorite?  Worst?  Why?</li>
<li>How does middleware work?  When do you like to use it?</li>
</ul>


<h2>Ops</h2>

<ul>
<li>How can you use all CPUs on a server?</li>
<li>How to associate logs together with a single request path?</li>
<li>How to recover from fatal errors?</li>
<li>How do you load per-environment configuration?</li>
<li>How do you handle versioning of your apps and libs?</li>
</ul>


<h2>Modules</h2>

<ul>
<li>Why use modules?</li>
<li>How do you organize your API apps' modules?</li>
<li>Flavors of exports?  When do use each?</li>
</ul>


<h2>ES Next</h2>

<ul>
<li>Which new features have you used?  Like, not like?</li>
<li>async/await - Used instead of what?</li>
<li>Object literal extensions - How used?</li>
<li>Spread operator - Helpful usecases?</li>
<li>Arrow functions - What do they help with?</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Be True to Your Heart]]></title>
    <link href="http://jaketrent.com/post/be-true-to-your-heart/"/>
    <updated>2013-01-08T07:10:00-07:00</updated>
    <id>http://jaketrent.com/post/be-true-to-your-heart</id>
    <content type="html"><![CDATA[<p>When you're interviewing and are asked to share what you're most interested in.  You'd better know.  You'd better be enthused about it.  And don't abandon it, or you'll look insincere.</p>

<p><img src="http://i.imgur.com/fYzBj.png" alt="Alt Text" /></p>

<!--more-->


<p>Recently my teammate and I had a lunch interview with a potential future teammate.  As a lunch interview, it was mostly just a test as to the seriousness of the candidate and the opportunity as well as a team fitness test.  So, pretty laid back.  No hard core technical questions.  Mostly shooting the breeze about the tech industry, current positions, and thoughts on technology.  So, there's plenty of room for inference based on opinions shared.</p>

<p>The guy we were talking to was comfortable working on the frontend and the backend.  From what we could tell, he was probably capable all around.  Then my teammate asked a great question:  What do you really enjoy?  The change in demeanor versus the preceding 40 minutes of talk was noticeable.  He lit up and exclaimed that he loved data -- data relationships, data mining, and statistics.  He gave examples of things he had done recently and repeated his adoration of the subject.  I was caught up in his enthusiasm.</p>

<p>Then we made it more clear that we were on the frontend team, and the things he was most interested in were definitely not frontend.  My teammate told him that he'd get him in touch with our backend team lead.</p>

<p>Then he said that he could do both frontend or backend.  He'd be happy with frontend.  He loves learning new things.  "Will you interview me for a frontend position?  Just forget about my data comments." was essentially what he was saying -- or at least what I was hearing.</p>

<p>Oh, man!  My heart sank.  I was really kind of sad that he had essentially abandoned what he said he found most joy in.  It was an opportunistic move, even practical.  But I was pretty disappointed.  The guy seemed smart.  If so, he could probably pick his opportunity in this wonderful software industry of ours.  So why cave and totally deny the opportunities for what you really claim to enjoy to take the opportunity you had only had a lunch chat about?</p>

<p>His initial enthusiasm about his love of data was fun and contagious.  To see him deny it in the next breath made it feel like more of a play.  Perhaps it wasn't, but when you betray your true love, it makes me wonder at your general sincerity.  If you like something in tech and you're good at it, you should do it, hold out for it, and odds are you'll get your opportunity.</p>
]]></content>
  </entry>
  
</feed>
