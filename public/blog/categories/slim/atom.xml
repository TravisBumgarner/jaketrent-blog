<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: slim | Jake Trent]]></title>
  <link href="http://jaketrent.com/blog/categories/slim/atom.xml" rel="self"/>
  <link href="http://jaketrent.com/"/>
  <updated>2014-04-15T07:15:40-06:00</updated>
  <id>http://jaketrent.com/</id>
  <author>
    <name><![CDATA[Jake Trent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup Slim on Sinatra]]></title>
    <link href="http://jaketrent.com/post/setup-slim-on-sinatra/"/>
    <updated>2013-02-19T07:34:00-07:00</updated>
    <id>http://jaketrent.com/post/setup-slim-on-sinatra</id>
    <content type="html"><![CDATA[<p><a href="http://www.sinatrarb.com/">Sintra</a> is a light web server that's easy to start writing Ruby on.  Coming from Node/Express, I feel quite at home there.  Slim also feels like another JavaScript-world templating language, Jade, that I've had good experiences with.  <a href="http://slim-lang.com/">Slim</a> makes for quick templating and feels quite nice compared to ERB if you can handle the Haml style.  It's likewise quick and easy to get working on Sinatra.</p>

<p><img src="http://i.imgur.com/Dsnu3jA.png" alt="Slim templates" /></p>

<!--more-->


<h2>Quick Sinatra Setup</h2>

<h4>Require Sinatra</h4>

<p>Sinatra is super easy to setup.  Create a <code>Gemfile</code> with the dependencies as follows:</p>

<p>```ruby
source "http://rubygems.org"</p>

<p>gem "sinatra"
gem "thin"
```</p>

<p>Then create a default <code>web.rb</code> webserver with contents that look something like:</p>

<p>```ruby
require "sinatra"</p>

<p>get "/" do
  "Hello, world!"
end
```</p>

<p>Then if you run the command:</p>

<p><code>
$ ruby web.rb
</code></p>

<p>You should get a startup message like:</p>

<p>```
== Sinatra/1.3.4 has taken the stage on 4567 for development with backup from Thin</p>

<blockquote><blockquote><p>Thin web server (v1.5.0 codename Knife)
Maximum connections set to 1024
Listening on 0.0.0.0:4567, CTRL+C to stop
```</p></blockquote></blockquote>

<p>Go to <code>localhost:4567</code> in your browser to try out your server.</p>

<h4>Require Slim</h4>

<p>Returning a string is all well and good, but let's include Slim to be able to create more sophisticated templates. Include your Slim dependency in your <code>Gemfile</code> with the line:</p>

<p><code>ruby
gem "slim"
</code></p>

<p>Then from the Terminal, run:</p>

<p><code>
$ bundle install
</code></p>

<h4>Setup your Views</h4>

<p>Then create a directory next to your <code>web.rb</code> file called <code>views</code>.  Inside <code>views</code>, you can create your templates.  You can create a layout template aptly named <code>layout.slim</code>.  By default, your templates will extend from this layout.  Most simply, these files might look like this:</p>

<p>layout.slim:</p>

<p>```haml
doctype html
html
  head</p>

<pre><code>title My Slim Templates App
</code></pre>

<p>  body</p>

<pre><code>= yield
</code></pre>

<p>```</p>

<p>And, index.slim:</p>

<p><code>haml
h1 Loving Slim
</code></p>

<h4>Serve a Slim File</h4>

<p>And now to adjust our <code>web.rb</code> file to serve the new <code>index.slim</code> file:</p>

<p>```ruby
require "sinatra"
require "slim"</p>

<p>get "/" do
  slim :index
end
```</p>

<p>Finally restart your server, and you should see your new template shown in all it's glory.  Pretty easy cheesy.</p>

<h2>Setup Slim on Rails</h2>

<p>Want something even easier?  Well, if you know <a href="http://rubyonrails.org/">Rails</a> already, this will be a cinch.  The hardest part of getting Slim running on Rails is Rails itself.  Slim integration is even easier than on Sinatra.  Simply add this line to your Gemfile:</p>

<p><code>
gem "slim-rails"
</code></p>

<p>And then in order to activate the Slim handler, merely add the <code>.slim</code> extension onto the end of any of your template file names.  Your file names probably end in <a href="http://guides.rubyonrails.org/layouts_and_rendering.html"><code>.erb</code> by default</a>.  Change the ones that you want to convert to Slim templates to look like:</p>

<p><code>
index.html.slim
</code></p>

<p>Now the Rails are even slicker.</p>
]]></content>
  </entry>
  
</feed>
