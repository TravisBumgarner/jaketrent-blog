<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Review | Jake Trent]]></title>
  <link href="http://jaketrent.com/blog/categories/review/atom.xml" rel="self"/>
  <link href="http://jaketrent.com/"/>
  <updated>2013-05-21T09:12:21-06:00</updated>
  <id>http://jaketrent.com/</id>
  <author>
    <name><![CDATA[Jake Trent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UtahJS Conf 2013 Review]]></title>
    <link href="http://jaketrent.com/post/utahjs-conf-2013-review/"/>
    <updated>2013-05-20T06:59:00-06:00</updated>
    <id>http://jaketrent.com/post/utahjs-conf-2013-review</id>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/G3BBShC.png" alt="UtahJS" /></p>

<!--more-->


<h2>The Schedule</h2>

<p>The conference covered a single day.  Keynote in the morning by Tom Dale, co-creator of Emberjs.  3 tracks thereafter with 5 talks each.  There was a specialized track, all focused on Angular, which was nice for anyone that wanted to focus on that framework.  There was less Node focus overall compared to last year, which was disappointing.  There were 3 talks focused on testing.  We need more good testing talks.</p>

<p>My impression on the talks overall was that they were well done and that the speakers were generally engaging.  The topics focused a little much on browser-side MV* frameworks, but I guess that's hot right now.  Every talk I went to was meant for beginners at a very introductory level.  That was disappointing.  Of the topics presented, I found myself surprisingly most interested in Emberjs.  I have been tinkering with it since then and need to build something with it.</p>

<h2>The Food</h2>

<p>There was a plentitude of simple carbohydrates ready to serve to all learners at all times.  That was awesome.  Pastries appeared for breakfast, un-advertised.  They didn't do a boxed lunch this year.  Some didn't cry.  I almost did.  But I was pointed to a great gryo at a nearby Greek eatery instead.  Apparently the host venue, the Salt Lake City Public Library, didn't approve of serving food.  This, I don't understand, given that there was plenty of food floating around.  Apparenly pastries are ok, and sandwiches are not.</p>

<h2>The People</h2>

<p>Always a fun flavor to a conference, the attendees were great to mingle with.  The JavaScript community is a fun group to be with.  In Utah, we're a fairly small, tight group.  It was fun to have Tom Dale show up.  It was even said by some that the Ember folks were "actually nice" as opposed to what was thought to be observed by some on Twitter.  Haha.  I smiled quite a bit when I heard that.</p>

<h2>The Afterparty</h2>

<p>The party was put on by O.C. Tanner and Domo.  O.C. Tanner is my current home base.  We were in charge of prepping the space.  It was like a classic text adventure trying to guide party-comers through the labyrinth of the O.C. Tanner building to the eventual pot of gold that was the party.</p>

<p>The food never stopped coming, even after my stomach had taken on its full capacity.  Marvelous Catering (gotta love that name) provided a delicious "luau pork dinner".  I heard "luau" and assumed pineapple, of which there was none, which disappointed me just a little.  The owner of Fongo Bongo, a local game shop supplied a great collection of board and card games.  We had a couple Xboxen humming whilst TVs blasted fighting games to which I knew no combos.  We had a great time.</p>

<h2>Next Year</h2>

<p>I'm glad that this event has shown some perpetuity.  I hope it continues next year.  I think they have a good formula.  The price, the locale, the speaker lineup, and the associated activities make for a good one-day experience each Spring.  I would focus on improving one bit next year: the website.  It was the least well-done part of the conference.  I find that extremely ironic given the target market for the event.</p>

<p>So next Spring, come to Utah and attend the JsConf.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mountain West Ruby Conf 2013 Review]]></title>
    <link href="http://jaketrent.com/post/mountain-west-ruby-conf-2013-review/"/>
    <updated>2013-04-05T15:23:00-06:00</updated>
    <id>http://jaketrent.com/post/mountain-west-ruby-conf-2013-review</id>
    <content type="html"><![CDATA[<p>I recently attended the Mountain West Ruby Conference.  It was my first time going.  I was pleasantly surprised by the quality of the conference.  I would recommend it.</p>

<p><img src="http://i.imgur.com/ABNr5MC.jpg" alt="Mountain West Ruby Conf" /></p>

<!--more-->


<h2>Peeps</h2>

<p>I'm new to the Ruby community.  I get to use it more in my current job than I ever have before.  Whenever entering a new community, it's good to find some friends.  I was pleased to notice that everyone I encountered at the conference was very friendly and welcoming.</p>

<p>About the coolest thing about the community is one of the slogans: MINSWAN, which means "Matz is nice, so we are nice."  How cool is that?  Matz is the Ruby creator.  Wait, who am I kidding.  You already know that.</p>

<p>I was very impressed with the blatant lack of trolling other communities.  This even with the live stream video cameras rolling (people can tend to do weird things when put on camera).</p>

<p>The conference attracted speakers and attendees from as far away as Australia.</p>

<h2>Speakers</h2>

<p>I didn't look too closely at the schedule previous to attending.  Once I got there, I was surprised at the caliber of those people and companies who were represented.  These were big names in the tech community, such as Matz, himself, Github, Heroku, and others.</p>

<p>The conference is single track, so that meant I got to see everyone speak.  I mostly like that but kind of hate that.  I believe it also meant fewer speaking slots, so everyone was pretty top notch.</p>

<p>I was impressed with the stage presence of most speakers.  A few were pretty droning, but in general everyone was very polished, had good slide decks, and shared engaging and useful content.</p>

<p>Devops was the stated subject matter of an entire day of the conference.  This was cool.  We can use that kind of focus on the subject.  But then it bled into the next days as well.  I want some pure code, pure Ruby'ness.  I got some of that, but not as much as I would like.  I paid my devops dues the first day.  I was ready to not hear any more of it on days 2 and 3.</p>

<h2>Venue</h2>

<p>It was in my back yard!  I loved the lack of a hotel requirement!  Apparently some visitors even camped in the wilderness, Nacho style.</p>

<p>The Salt Lake City Public Library is a great downtown location for a small conference.  In this case, with the conference being single track, the single largest room, the amphitheatre, was the only room required for all attendees.  It featured plenty of seating -- at the cost of no leg room.</p>

<p>The wifi also held up better than it has for similar gatherings in this space.  It was announced that "the city and Xmission are working feverishly" to maintain connectivity several times over the 3 days.  It still didn't stay up.  This is a common tech conf occurrence.</p>

<p>I was sorely disappointed with the lack of sugary confections meant to encourage the jollyness and attentiveness of the conference-goers.  At one point, it was necessary to slip out and find a good bakery downtown.  I was not disappointed.  I was happy to see at least the vendors' vinyl stickers come out on the last day.  We need more of that!</p>

<p>In all, it was a good use of my couple days.  It wasn't too pricey, but then, I wasn't paying.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jumpstart Lab Ruby Training Review]]></title>
    <link href="http://jaketrent.com/post/jumpstartlab-ruby-training-review/"/>
    <updated>2013-02-19T07:06:00-07:00</updated>
    <id>http://jaketrent.com/post/jumpstartlab-ruby-training-review</id>
    <content type="html"><![CDATA[<p><a href="http://jumpstartlab.com/">Jumpstart Lab</a> offers a <a href="http://www.jumpstartlab.com/courses/">Ruby training</a>.  I recently attended.  I had a great experience and learned a lot in my first real introduction to Ruby and Ruby on Rails.  I would highly recommend the course.  Here are a few more details on my experience.</p>

<p><img src="http://i.imgur.com/DniDljD.png" alt="Jumpstart Lab" /></p>

<!--more-->


<h2>Format</h2>

<h4>Length</h4>

<p>Jumpstart sent a great instructor, <a href="https://twitter.com/franklinwebber">Franklin Webber</a>, to come lead us through the exercises.  The course was on site at our company.  It was 5 days in length.  Instruction went from 9am to 4pm daily, with a 1 hour break at lunch time.</p>

<h4>Breaks</h4>

<p>Exercises throughout the day were split up into 25 min time chunks with 5 min breaks following.  Some will recognize this usual time chunks for the <a href="http://www.pomodorotechnique.com/">Pomodoro technique</a>.  Frank, as the leader of the exercises, was more strict in his observance of the Pomodoro time slices than I'm used to seeing.  Many people I've worked with would work right through a short break, but we took breaks quite religiously.</p>

<h4>Content Split</h4>

<p>In our 5 day training, we spent about the first 3 days going over vanilla Ruby.  The next 2 days, we focused on the Ruby on Rails framework specifically.</p>

<h2>Approach</h2>

<h4>TDD</h4>

<p>Probably about the coolest aspect of this training was its relying on <a href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a> to get stuff done.  Often training courses, especially those that introduce brand new languages and concepts, leave testing as a tack-on feature, meantioned in parting near the end of the course.  Thankfully, Jumpstart did a great job integrating this best practice into most of its instruction.</p>

<p>We used <a href="https://www.relishapp.com/rspec">Rspec</a> as a test runner.  We used <a href="https://github.com/guard/guard">Guard</a> to help us go faster through our test iterations.  We discussed what to test, how to make our tests more readable, how to isolate tests using <a href="https://relishapp.com/rspec/rspec-mocks/docs">mocks</a>, and practiced doing lots of tests.</p>

<p>Only the Rails portion of the course was taught using error-driven development.  This actually worked quite well, as learning to use a framework requires learning how the pieces connect and trying not to test the framework.</p>

<h4>Instructor-Led</h4>

<p>Frank made the class successful.  He is super knowledgeable about the subject matter.  He is fun and funny.  He is great at introducing topics that built upon each other.  He is great at letting the students figure things out for themselves and jumping in at the right moment to help clear hurdles.  It was great to meet and work with Frank, and I hope to do so again.</p>

<h2>Bonuses</h2>

<h4>Hack Night</h4>

<p>We do a <a href="http://tannerhack.eventbrite.com/">hack night</a> every other week at work anyway.  Since Frank was here, he led the hack night.  We did a Codemash kata exercise where we created code to generate a <a href="https://github.com/jaketrent/minesweeper">Minesweeper</a> board.  We split into teams and pair-programmed our different solutions.  Everyone came up with unique solutions, we compared them, and then iterated.  I had so much fun with the exercise, I put a frontend on the game and made it <a href="http://minemopper.herokuapp.com">playable</a>.</p>

<h4>Tutorial Content</h4>

<p>Jumpstart printed materials for us in a booklet.  The <a href="http://tutorials.jumpstartlab.com">tutorials</a> are also available online.  Frank took a unique path through the content, and we talked through our specific approach.  As he worked, Frank also <a href="https://github.com/burtlo/training-021113">uploaded the code</a> from our instruction to Github.  I did the same for <a href="http://github.com/jaketrent/ruby-training">my code</a>.</p>

<h4>Recommendation</h4>

<p>I think that this training series was about the best I've attended.  I'm doing a lot more Ruby and Rails in my current job than I expected even a few weeks ago, so it was very timely and useful for me.  The content was good, but it was the instruction that made it top notch.  Thanks, Frank and Jumpstart, for the great experience!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Smashing Node Review]]></title>
    <link href="http://jaketrent.com/post/smashing-node-review/"/>
    <updated>2013-01-29T16:51:00-07:00</updated>
    <id>http://jaketrent.com/post/smashing-node-review</id>
    <content type="html"><![CDATA[<p>Node.js is everywhere.  There's a lot of room for people to learn and get into it.  A good starter book is <a href="http://amzn.to/14ttetp">Smashing Node by Guillermo Rauch</a>.  Here's what I thought and what I learned while reading it.</p>

<p><img src="http://i.imgur.com/hQTBeAF.jpg" alt="Smashing Node" /></p>

<!--more-->


<h2>Overall</h2>

<p>Overall, I would call Smashing Node an introduction to Node book.  This is a good thing.  It does a nice job of building on itself.  It starts with the JavaScript that everyone knows and advances to the new places that Node allows you to go.  The chapters are incremental.</p>

<p>It's a good length.  This is not a tome that you might pick up in a level 3 dungeon in order to boost your fire magic.  You can read a couple chapters a day and be done in a week.  Thankfully, it's in consumable-sized bits.  Maybe you'll end up boosting your fire magic a bit too.</p>

<p>The book boasts a fair breadth of subjects.  It introduces purely syntax subjects.  It also expands into working examples dealing with real network protocols and database apis.</p>

<h2>Style</h2>

<p>Guirremo has a very easy-to-read, conversational style.  I value this more and more in books -- perhaps even especially in technical books.  It helps me engage.  It helps me read faster and more.  I can read API docs when I need them.  A book should not read like an API doc.</p>

<p>Most subjects in the book were chosen well.  I enjoyed almost all of them.  There always is a bottom of the list, however, and mine ended with the MySQL, HTTP, and TCP chapters.  Knowledge on those subjects is probably good to have, but I had to slog through these chapters.</p>

<p>The code examples were enjoyable because they eventually turned into functional prototypes.  We built a Twitter client, an IRC chat, a social DJ program, and more.  That's pretty cool.  The downside was that the code examples could get a little long.  And with the entire working example, complete with all the npm commands and boilerplate code, sometimes the meaningful bits got a little obscured.  I read the book as a <a href="http://amzn.to/14ttetp">Kindle book</a> on a phone, so the long code snippets probably seemed even longer than they were.</p>

<h2>Highlight Subjects</h2>

<h4>Express Features</h4>

<p>I use <a href="http://expressjs.com/">Express</a> more than any other library in Node.  It's a great HTTP request/response wrapper that makes creating web servers fun and easy.  Even so, this book introduced a number of features of the library that I was previously unaware of.  Generally, I think it helped illuminate for me a lot of the bits of Connect, which functions underneath Express.  Specifically, did you know that you can modify the Express logger to log specific request tokens of your choosing?</p>

<h4>Redis</h4>

<p>There was a great section that took a look at <a href="http://www.mongodb.org/">Mongo</a>, <a href="http://www.mysql.com/">MySQL</a>, and <a href="http://redis.io/">Redis</a>.  I enjoyed the chapter on Redis the most.  This is probaby somewhat because I have the most to learn in Redis and have used it the least.  I was also impressed at the ease with which Guirremo layed out a simple social graph using the Redis API.  The chosen tools, Node and Redis, made it simple, short, and elegant.</p>

<p>Try writing many of the code examples in this book in Java and printing them on dead trees.  You'll need a bigger backpack.</p>

<h4>Testing</h4>

<p>I enjoyed the fact that testing was even mentioned.  A few testing styles and frameworks were introduced.  It was enjoyable but very light.  It would be cool to see a more thorough treatment, perhaps with applicable tests worked into the examples throughout the book.</p>

<p>In this same vein, I think the book did an ok job at addressing the subject of error handling.  I think this book and other Node resources and educators should focus more on this issue.  It is, after all, more important in Node's single-threaded environment than on most platforms.</p>

<h4>Web Sockets</h4>

<p>I had only previously done web sockets via <a href="http://socket.io/">Socket.IO</a>, a web socket wrapper written by the author of the book.  It was good to see vanilla web sockets in action so I could better understand the technology, its limitations, and be grateful for the great libraries that help it be more useful and easy to use.</p>

<h4>Great Libraries</h4>

<p>The booked worked in usages of some great libraries throughout the coding examples.  As mentioned, <a href="http://socket.io/">Socket.IO</a> is a great web socket wrapper.  <a href="https://github.com/visionmedia/superagent">Superagent</a> is a great higher-level request API.  <a href="http://visionmedia.github.com/mocha/">Mocha</a> is a fantastic test framework.  And <a href="http://mongoosejs.com/">Mongoose</a> provides a nice model layer on top of the native MongoDb calls.</p>

<p>So, what are you waiting for?  Go learn Node!  Use this book to help you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quitter Review]]></title>
    <link href="http://jaketrent.com/post/quitter-review/"/>
    <updated>2013-01-03T07:26:00-07:00</updated>
    <id>http://jaketrent.com/post/quitter-review</id>
    <content type="html"><![CDATA[<p>When you feel you're ready to quit your day job to pursue your dream job, think twice, and read this book.</p>

<p><img src="http://i.imgur.com/mEsJW.png" alt="Quitter Book" /></p>

<!--more-->


<h2>The Gist</h2>

<p>Overall, the book was not what I expected.  Jon Acuff, in his book, Quitter, describes his past self as a serial quitter.  Thus, he has plenty of quitting experience to speak from.  He essentially says that he did it the wrong way.  Then, he tries to share some tips on how to quit the right way.  Essentially, his point is to keep your day job, and use it to prepare patiently for making your dream job a reality.</p>

<h2>Great Points</h2>

<p>Given that his book is based on his real life experiences, it should be no surprise that he brought up some insightful points.  Here are some I found most enlightening:</p>

<h4>The Value of Invisilibity</h4>

<p>Invisibility has value.  When we haven't set ourselves up as the biggest professional around, we have a shorter distance to fall.  We all still fail at times, so the combo is a plus.  You can dream big in this mode because when you fail big, no one cares.  And you can do this over and over again.</p>

<p>The safest or most conservative person in the world will be the person with the most visibility.  Why?  Because they have a reputation and a performance record to keep up.  If you don't have to maintain that, you'll probably take interesting risks more readily.  When we see people at the height of their success, we don't have visibility into the long years that came before when they were building it.</p>

<h4>Quantity is Essential in Starting a Dream</h4>

<p>We need to practice our dream.  We can see ourself successful in our minds, but interesting work requires serious skill.  Moreover, going straight to the pinnacle of our eventual quality standard will paralyze us in the short term.  We will find ourselves unable to produce.  In Jon Acuff's case, he realized that he gave away 1 million blog words before he was ever good enough or had a following enough to publish and sell 50 thousand words.</p>

<h4>Perils of Business Ownership</h4>

<p>Being an entreprenuer is a special job.  But, that life is not for the faint of heart.  It's great.  If you're sitting in a day job you don't particularly like, you're probably fantasizing about the potential of ultimate freedom entreprenuership might bring.  It does, and it doesn't.  The beast must be tamed.  Jon takes plenty of time to mention the pitfalls to avoid and the preparations to make in his book.  For instance, he explains what he and close associates have experienced:  That bills will become your new boss.  Your ability to create revenue on your own -- every day! -- will become the new stress.  That is, unless you're able to prepare adequately and time your jump well.</p>

<h2>Jon's Style</h2>

<p>I was unprepared for how much I would laugh while reading Jon's book.  Business self-help books are not expected to be very comical or entertaining.  Jon gave the book a fun voice.  It was easy to read out loud to my wife -- you know, for getting on the same dream page.  Jon doesn't take himself to seriously, and that's refreshing.</p>

<p>It's a short read.  It's a fun read.  The information is from the heart, and I think it's worth learning from Jon's experience.  If you're considering ever starting your own business or if you're not in your dream job yet and want to get there, I recommend this book on the subject.</p>
]]></content>
  </entry>
  
</feed>
