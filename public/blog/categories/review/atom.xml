<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Review | Jake Trent]]></title>
  <link href="http://jaketrent.com/blog/categories/review/atom.xml" rel="self"/>
  <link href="http://jaketrent.com/"/>
  <updated>2013-05-01T07:31:18-06:00</updated>
  <id>http://jaketrent.com/</id>
  <author>
    <name><![CDATA[Jake Trent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Jumpstart Lab Ruby Training Review]]></title>
    <link href="http://jaketrent.com/post/jumpstartlab-ruby-training-review/"/>
    <updated>2013-02-19T07:06:00-07:00</updated>
    <id>http://jaketrent.com/post/jumpstartlab-ruby-training-review</id>
    <content type="html"><![CDATA[<p><a href="http://jumpstartlab.com/">Jumpstart Lab</a> offers a <a href="http://www.jumpstartlab.com/courses/">Ruby training</a>.  I recently attended.  I had a great experience and learned a lot in my first real introduction to Ruby and Ruby on Rails.  I would highly recommend the course.  Here are a few more details on my experience.</p>

<p><img src="http://i.imgur.com/DniDljD.png" alt="Jumpstart Lab" /></p>

<!--more-->


<h2>Format</h2>

<h4>Length</h4>

<p>Jumpstart sent a great instructor, <a href="https://twitter.com/franklinwebber">Franklin Webber</a>, to come lead us through the exercises.  The course was on site at our company.  It was 5 days in length.  Instruction went from 9am to 4pm daily, with a 1 hour break at lunch time.</p>

<h4>Breaks</h4>

<p>Exercises throughout the day were split up into 25 min time chunks with 5 min breaks following.  Some will recognize this usual time chunks for the <a href="http://www.pomodorotechnique.com/">Pomodoro technique</a>.  Frank, as the leader of the exercises, was more strict in his observance of the Pomodoro time slices than I'm used to seeing.  Many people I've worked with would work right through a short break, but we took breaks quite religiously.</p>

<h4>Content Split</h4>

<p>In our 5 day training, we spent about the first 3 days going over vanilla Ruby.  The next 2 days, we focused on the Ruby on Rails framework specifically.</p>

<h2>Approach</h2>

<h4>TDD</h4>

<p>Probably about the coolest aspect of this training was its relying on <a href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a> to get stuff done.  Often training courses, especially those that introduce brand new languages and concepts, leave testing as a tack-on feature, meantioned in parting near the end of the course.  Thankfully, Jumpstart did a great job integrating this best practice into most of its instruction.</p>

<p>We used <a href="https://www.relishapp.com/rspec">Rspec</a> as a test runner.  We used <a href="https://github.com/guard/guard">Guard</a> to help us go faster through our test iterations.  We discussed what to test, how to make our tests more readable, how to isolate tests using <a href="https://relishapp.com/rspec/rspec-mocks/docs">mocks</a>, and practiced doing lots of tests.</p>

<p>Only the Rails portion of the course was taught using error-driven development.  This actually worked quite well, as learning to use a framework requires learning how the pieces connect and trying not to test the framework.</p>

<h4>Instructor-Led</h4>

<p>Frank made the class successful.  He is super knowledgeable about the subject matter.  He is fun and funny.  He is great at introducing topics that built upon each other.  He is great at letting the students figure things out for themselves and jumping in at the right moment to help clear hurdles.  It was great to meet and work with Frank, and I hope to do so again.</p>

<h2>Bonuses</h2>

<h4>Hack Night</h4>

<p>We do a <a href="http://tannerhack.eventbrite.com/">hack night</a> every other week at work anyway.  Since Frank was here, he led the hack night.  We did a Codemash kata exercise where we created code to generate a <a href="https://github.com/jaketrent/minesweeper">Minesweeper</a> board.  We split into teams and pair-programmed our different solutions.  Everyone came up with unique solutions, we compared them, and then iterated.  I had so much fun with the exercise, I put a frontend on the game and made it <a href="http://minemopper.herokuapp.com">playable</a>.</p>

<h4>Tutorial Content</h4>

<p>Jumpstart printed materials for us in a booklet.  The <a href="http://tutorials.jumpstartlab.com">tutorials</a> are also available online.  Frank took a unique path through the content, and we talked through our specific approach.  As he worked, Frank also <a href="https://github.com/burtlo/training-021113">uploaded the code</a> from our instruction to Github.  I did the same for <a href="http://github.com/jaketrent/ruby-training">my code</a>.</p>

<h4>Recommendation</h4>

<p>I think that this training series was about the best I've attended.  I'm doing a lot more Ruby and Rails in my current job than I expected even a few weeks ago, so it was very timely and useful for me.  The content was good, but it was the instruction that made it top notch.  Thanks, Frank and Jumpstart, for the great experience!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Smashing Node Review]]></title>
    <link href="http://jaketrent.com/post/smashing-node-review/"/>
    <updated>2013-01-29T16:51:00-07:00</updated>
    <id>http://jaketrent.com/post/smashing-node-review</id>
    <content type="html"><![CDATA[<p>Node.js is everywhere.  There's a lot of room for people to learn and get into it.  A good starter book is <a href="http://amzn.to/14ttetp">Smashing Node by Guillermo Rauch</a>.  Here's what I thought and what I learned while reading it.</p>

<p><img src="http://i.imgur.com/hQTBeAF.jpg" alt="Smashing Node" /></p>

<!--more-->


<h2>Overall</h2>

<p>Overall, I would call Smashing Node an introduction to Node book.  This is a good thing.  It does a nice job of building on itself.  It starts with the JavaScript that everyone knows and advances to the new places that Node allows you to go.  The chapters are incremental.</p>

<p>It's a good length.  This is not a tome that you might pick up in a level 3 dungeon in order to boost your fire magic.  You can read a couple chapters a day and be done in a week.  Thankfully, it's in consumable-sized bits.  Maybe you'll end up boosting your fire magic a bit too.</p>

<p>The book boasts a fair breadth of subjects.  It introduces purely syntax subjects.  It also expands into working examples dealing with real network protocols and database apis.</p>

<h2>Style</h2>

<p>Guirremo has a very easy-to-read, conversational style.  I value this more and more in books -- perhaps even especially in technical books.  It helps me engage.  It helps me read faster and more.  I can read API docs when I need them.  A book should not read like an API doc.</p>

<p>Most subjects in the book were chosen well.  I enjoyed almost all of them.  There always is a bottom of the list, however, and mine ended with the MySQL, HTTP, and TCP chapters.  Knowledge on those subjects is probably good to have, but I had to slog through these chapters.</p>

<p>The code examples were enjoyable because they eventually turned into functional prototypes.  We built a Twitter client, an IRC chat, a social DJ program, and more.  That's pretty cool.  The downside was that the code examples could get a little long.  And with the entire working example, complete with all the npm commands and boilerplate code, sometimes the meaningful bits got a little obscured.  I read the book as a <a href="http://amzn.to/14ttetp">Kindle book</a> on a phone, so the long code snippets probably seemed even longer than they were.</p>

<h2>Highlight Subjects</h2>

<h4>Express Features</h4>

<p>I use <a href="http://expressjs.com/">Express</a> more than any other library in Node.  It's a great HTTP request/response wrapper that makes creating web servers fun and easy.  Even so, this book introduced a number of features of the library that I was previously unaware of.  Generally, I think it helped illuminate for me a lot of the bits of Connect, which functions underneath Express.  Specifically, did you know that you can modify the Express logger to log specific request tokens of your choosing?</p>

<h4>Redis</h4>

<p>There was a great section that took a look at <a href="http://www.mongodb.org/">Mongo</a>, <a href="http://www.mysql.com/">MySQL</a>, and <a href="http://redis.io/">Redis</a>.  I enjoyed the chapter on Redis the most.  This is probaby somewhat because I have the most to learn in Redis and have used it the least.  I was also impressed at the ease with which Guirremo layed out a simple social graph using the Redis API.  The chosen tools, Node and Redis, made it simple, short, and elegant.</p>

<p>Try writing many of the code examples in this book in Java and printing them on dead trees.  You'll need a bigger backpack.</p>

<h4>Testing</h4>

<p>I enjoyed the fact that testing was even mentioned.  A few testing styles and frameworks were introduced.  It was enjoyable but very light.  It would be cool to see a more thorough treatment, perhaps with applicable tests worked into the examples throughout the book.</p>

<p>In this same vein, I think the book did an ok job at addressing the subject of error handling.  I think this book and other Node resources and educators should focus more on this issue.  It is, after all, more important in Node's single-threaded environment than on most platforms.</p>

<h4>Web Sockets</h4>

<p>I had only previously done web sockets via <a href="http://socket.io/">Socket.IO</a>, a web socket wrapper written by the author of the book.  It was good to see vanilla web sockets in action so I could better understand the technology, its limitations, and be grateful for the great libraries that help it be more useful and easy to use.</p>

<h4>Great Libraries</h4>

<p>The booked worked in usages of some great libraries throughout the coding examples.  As mentioned, <a href="http://socket.io/">Socket.IO</a> is a great web socket wrapper.  <a href="https://github.com/visionmedia/superagent">Superagent</a> is a great higher-level request API.  <a href="http://visionmedia.github.com/mocha/">Mocha</a> is a fantastic test framework.  And <a href="http://mongoosejs.com/">Mongoose</a> provides a nice model layer on top of the native MongoDb calls.</p>

<p>So, what are you waiting for?  Go learn Node!  Use this book to help you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quitter Review]]></title>
    <link href="http://jaketrent.com/post/quitter-review/"/>
    <updated>2013-01-03T07:26:00-07:00</updated>
    <id>http://jaketrent.com/post/quitter-review</id>
    <content type="html"><![CDATA[<p>When you feel you're ready to quit your day job to pursue your dream job, think twice, and read this book.</p>

<p><img src="http://i.imgur.com/mEsJW.png" alt="Quitter Book" /></p>

<!--more-->


<h2>The Gist</h2>

<p>Overall, the book was not what I expected.  Jon Acuff, in his book, Quitter, describes his past self as a serial quitter.  Thus, he has plenty of quitting experience to speak from.  He essentially says that he did it the wrong way.  Then, he tries to share some tips on how to quit the right way.  Essentially, his point is to keep your day job, and use it to prepare patiently for making your dream job a reality.</p>

<h2>Great Points</h2>

<p>Given that his book is based on his real life experiences, it should be no surprise that he brought up some insightful points.  Here are some I found most enlightening:</p>

<h4>The Value of Invisilibity</h4>

<p>Invisibility has value.  When we haven't set ourselves up as the biggest professional around, we have a shorter distance to fall.  We all still fail at times, so the combo is a plus.  You can dream big in this mode because when you fail big, no one cares.  And you can do this over and over again.</p>

<p>The safest or most conservative person in the world will be the person with the most visibility.  Why?  Because they have a reputation and a performance record to keep up.  If you don't have to maintain that, you'll probably take interesting risks more readily.  When we see people at the height of their success, we don't have visibility into the long years that came before when they were building it.</p>

<h4>Quantity is Essential in Starting a Dream</h4>

<p>We need to practice our dream.  We can see ourself successful in our minds, but interesting work requires serious skill.  Moreover, going straight to the pinnacle of our eventual quality standard will paralyze us in the short term.  We will find ourselves unable to produce.  In Jon Acuff's case, he realized that he gave away 1 million blog words before he was ever good enough or had a following enough to publish and sell 50 thousand words.</p>

<h4>Perils of Business Ownership</h4>

<p>Being an entreprenuer is a special job.  But, that life is not for the faint of heart.  It's great.  If you're sitting in a day job you don't particularly like, you're probably fantasizing about the potential of ultimate freedom entreprenuership might bring.  It does, and it doesn't.  The beast must be tamed.  Jon takes plenty of time to mention the pitfalls to avoid and the preparations to make in his book.  For instance, he explains what he and close associates have experienced:  That bills will become your new boss.  Your ability to create revenue on your own -- every day! -- will become the new stress.  That is, unless you're able to prepare adequately and time your jump well.</p>

<h2>Jon's Style</h2>

<p>I was unprepared for how much I would laugh while reading Jon's book.  Business self-help books are not expected to be very comical or entertaining.  Jon gave the book a fun voice.  It was easy to read out loud to my wife -- you know, for getting on the same dream page.  Jon doesn't take himself to seriously, and that's refreshing.</p>

<p>It's a short read.  It's a fun read.  The information is from the heart, and I think it's worth learning from Jon's experience.  If you're considering ever starting your own business or if you're not in your dream job yet and want to get there, I recommend this book on the subject.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IntelliJ 12 Review]]></title>
    <link href="http://jaketrent.com/post/intellij-12-review/"/>
    <updated>2012-12-12T15:33:00-07:00</updated>
    <id>http://jaketrent.com/post/intellij-12-review</id>
    <content type="html"><![CDATA[<p>I've used IntelliJ since version 6.  Now we're version 12.  It's just gotten better.  Version 12 is definitely an incremental release.  There's nothing too whiz bang here that I care about, but the quality overall is increased.</p>

<p><img src="http://i.imgur.com/RM3Q1.jpg" alt="IntelliJ 12" /></p>

<!--more-->


<h2>IntelliJ 12 New Core Features</h2>

<p>The highlights of the <a href="http://www.jetbrains.com/idea/whatsnew/index.html">"What's New"</a> list include Java 8 support, Spring tools update, Play 2.0 support, and Android UI designer.  All positives, but not really things I care very deeply about and will probably never use.  There's a bit more on the list, but there's nothing that is a huge, "Now IntelliJ can do ______" item.</p>

<h2>IntelliJ 12 Quality of Life</h2>

<p>During my evaluation, however, I have been very pleased with the quality of life it has afforded me.  IntelliJ has always treated me very well in comparison to the competition.  IntelliJ 12 just makes that good experience a little bit sweeter.</p>

<h4>Darkula Theme</h4>

<p>This has to be inspired by the rise of <a href="http://www.sublimetext.com/">Sublime Text</a>, which has a dark theme as its default.  More and more devs I know are using Sublime extensively.  Overall, I like the look of the Darkula theme.  It's a bit easier on the eyes.  The icons got a fun, retro overhaul.  In some cases, I've noticed things that my eyes have grown so accustomed to that they have ignored for some time.  It's also taken a bit to get used to it and start to expect things and see them faster.  I find it interesting that soooo much of this release has been focused on this UI theme.</p>

<h4>Popup Dialogs are Faster</h4>

<p>It seems that when a non-main window is told to appear that it does so a bit quicker now.  Intellisense seems a bit more snappy, and the "recent files" switcher doesn't lag as it seemed to in the past sometimes.  It's fun, and it lets me go faster.</p>

<h4>Better OSX Shortcuts</h4>

<p>When I switched to OSX from Linux, I was immediately disappointed by the lack of keyboard shortcuts in comparison to Linux.  The most egregious omission was the lack of alt-* combos to press buttons in the UI via the keyboard.  Alt-p to engage the 'push' button in the Git push dialog has been a long time coming.</p>

<p><img src="http://i.imgur.com/FYe1O.jpg" alt="P for Push" /></p>

<h4>Git Integration is better</h4>

<p>For performance and UI reasons, I would often just use Git on the command line instead of from within IntelliJ.  Now the Git integration is better than ever.  It seems waaaay fast.  I'm a little puzzled at <em>how</em> the git push could be so much faster in comparison to the previous version.</p>

<h4>Project Type Support</h4>

<p>Small thing, but I like the new "New Project" dialog.  It's simplified and easier to navigate.  It is fast and simple.  It doesn't take you through options that don't apply.  I'm in that dialog a lot, and I like the change.</p>

<h2>The Right Direction</h2>

<p>Really, there's not a ton new here.  It's such a solid tool to start.  It's where I spend most of my day though, so even incremental quality improvement is welcome.</p>

<p>Let's see, what's not there that I wish for?:</p>

<ul>
<li>Live debug the JavaScript running in Chrome (not just Firefox)</li>
<li>Run and debug Grunt and other Node-based cli apps</li>
</ul>


<p>Does IntelliJ already do those things?  Probably, and I just don't yet know how to bend it to my will.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paper by FiftyThree]]></title>
    <link href="http://jaketrent.com/post/paper-by-fiftythree/"/>
    <updated>2012-10-14T16:58:00-06:00</updated>
    <id>http://jaketrent.com/post/paper-by-fiftythree</id>
    <content type="html"><![CDATA[<p>Have you ever showed up in the App Store looking for an app in a particular category and been overwhelmed at the number of choices present?  This is certainly the case for the drawing and art app category.  But, there is at least one art app that stands out clearly from the others: <a href="http://www.fiftythree.com/paper">"Paper" by FiftyThree</a>.</p>

<p><img src="http://i.imgur.com/M0kYA.jpg" alt="Paper brushes" /></p>

<!--more-->


<h2>Best Brush</h2>

<p>The best feature of Paper is the one you get for free: the fountain pen.  It is easily the best brush I've used on any art app.  I've tried Sketchbook and Sketchbook Ink.  They are no where close.  It has the most beautiful tapered edges.  It responds best to speed and direction.  It comes the closest to a real fountain pen.</p>

<h2>Gestures</h2>

<p>The rewind/undo feature is invaluable when drawing.  It is immediately available by using two fingers.  You can activate it anywhere on screen.  This makes for very fast iterations on a drawing.  It's both intuitive and fun.</p>

<h2>Flair</h2>

<p>The app has a great style.  It's minimalistic and focused.  The notebook collection is fun.  The page flip is fun.  The UI is simple and powerful.  The focus remains on the drawing, where it should be.</p>

<h2>Sharing</h2>

<p>Sharing is straightforward and fast.  Exporting your drawings into your photo library is easy.  It's just as easy to share on the web.  Tweet with "#MadeWithPaper" and you'll show up on their <a href="http://madewithpaper.fiftythree.com/">blog</a>.</p>

<h2>Pricing</h2>

<p>I get the fountain pen brush for free, and I'm happy.  You pay $2 to get each of their 4 other brushes.  The next coolest is definitely the water color brush.  It totally makes sense to pay for these top-notch brushes.  Each brush takes considerable time and effort to develop.  Other apps -- I'm looking at your Sketchbook -- might include a pile of brushes at a lower price, but they are simply not as good.</p>

<h2>Wish List</h2>

<p>There are a few things that I think the app is lacking:</p>

<ol>
<li>The color palette is too simple.  I would love more options.  Apparently this is in the works.  There are many interesting <a href="http://support.fiftythree.com/fiftythree/topics/colour_palette">suggestions for expanding the palette</a> made on their forum.  <strong>Update:</strong> The latest update has a <a href="http://www.fastcompany.com/3002676/magical-tech-behind-paper-ipads-color-mixing-perfection">sweet color mixing tool</a>.</li>
<li>A zoom feature would be nice.  The difficult thing would be mapping it to an intuitive gesture, especially differentiating it from the super-awesome rewind gesture.  The resolution is high (2048x1536), but it sometimes doesn't feel very high given that detail work is hard without a zoom.</li>
<li>Being able to change background/paper options would be awesome.  At this point, all you start with is a plain, off-white background with no texture.  The app is called "Paper", afterall.  Wouldn't it be nice to have some more options here?</li>
</ol>


<p>The product features are well-thought and the FiftyThree team obviously has a design philosophy.  So, my pining for new features is patient.  I love what they have thus far.</p>

<h2>Magical</h2>

<p>Using Paper really has been one of the magical moments of using the iPad.  It gives a slick experience that gets me drawing fast.  There are masterful, well-honed tools that make my art look good.  The use of gestures makes great use of the direct input ability of the touch device.  I've enjoyed many hours using Paper, and I look forward to more products from FiftyThree.</p>

<p>What is your favorite feature of Paper?  Or of another art/drawing app?</p>
]]></content>
  </entry>
  
</feed>
