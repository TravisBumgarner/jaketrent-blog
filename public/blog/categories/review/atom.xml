<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Review | Jake Trent]]></title>
  <link href="http://jaketrent.com/blog/categories/review/atom.xml" rel="self"/>
  <link href="http://jaketrent.com/"/>
  <updated>2016-09-29T07:58:13-06:00</updated>
  <id>http://jaketrent.com/</id>
  <author>
    <name><![CDATA[Jake Trent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Strange Loop and Elm Conf 2016 Review]]></title>
    <link href="http://jaketrent.com/post/strange-loop-elm-conf-2016-review/"/>
    <updated>2016-09-20T11:38:00-06:00</updated>
    <id>http://jaketrent.com/post/strange-loop-elm-conf-2016-review</id>
    <content type="html"><![CDATA[<p>Here's a quick conference review and some highlight bullets from some of my favorite parts.  It was my first time going to Strange Loop.  It was also host to the first Elm Conf ever.  I was excited to go to both.  I was looking for new, eclectic content to consider.  I was not disappointed.</p>

<p><img src="http://i.imgur.com/SusCISQ.jpg" alt="strange loop and elm-conf" /></p>

<!--more-->


<h2>Venue</h2>

<p>The city was awesome.  I got to hang out and explore St. Louis quite a bit.  I hadn't been there since I was a small child.  There's a great, historic downtown area.  The stonework is inescapable and very impressive.  Great craftsmanship on display from a fun era of architecture.  Highlights were the many elegant cathedrals and churches, including the <a href="https://en.wikipedia.org/wiki/Cathedral_Basilica_of_Saint_Louis_(St._Louis">Cathedral Basilica</a>).</p>

<p><img src="http://i.imgur.com/6RHY7b6l.jpg" alt="cathedral bascillica" /></p>

<p>I had a good time visiting Forest Park, which is host to some great parks and a cool art museum which houses a wide variety of impressive paintings, sculpture, pottery, artifacts, etc.</p>

<p><img src="http://i.imgur.com/nIufoSal.jpg" alt="cool art representing america, wish I captured the info plaque better" /></p>

<p>Union Station was the site of Elm Conf and the hotel for the conference.  It's built in a historic train station.  Parking was under the open rafters of the apparent train yard.  The lobby is in the grand hall of the main station where they do light shows on the ceiling on the hour after 6pm.</p>

<p><img src="http://i.imgur.com/lT2TcbTl.jpg" alt="union station hotel" /></p>

<p>The Peabody Opera House was the site of all sessions for Strange Loop proper.  It's also an impressive venue, with an especially beautiful stage and impressive hall.  I could actually fit in the theatre seats too, so I was impressed.</p>

<p><img src="http://i.imgur.com/5uo4devl.jpg" alt="peabody opera house stage" /></p>

<h2>Content</h2>

<p>The content was interesting and engaging.  The speakers were all quite good.  As with any conf, there are low points, but the average here was high and the lows few.  The talks were mostly technical, some deep, a few shallower.  There were a couple good soft and thought talks as well.  What I was going for, I got, which was <em>variety</em>.  I feel like my exposure at this conference was broad.</p>

<p>Language themes emerged around Elm, Clojure, Scala, and I think I was getting a general Java vibe there as well.  As a top tech, distributed commit logs in the form of Kafka and Kinesis were mentioned multiple times.</p>

<h2>Hosting</h2>

<h4>Food</h4>

<p>Elm-conf had coffee and a few small snacks provided.  It didn't provide meals.  Somehow this was unclear to me.  Apparently there was a way to tack this on to your experience at registration that I missed.  In the end, I enjoyed going out to the city and finding something good with new friends, but that wasn't my initial expectation.  At Strange Loop, the Peabody Opera House provided breakfast, lunch, and snacks.  They were all solid and good.  In the end, I was made more solid and good.  Best food in the city I had was the day before the conf, when we visited Blues City Deli, and I ordered the Aporkalypse, a drippingly-delicious sandwhich of pork and more pork in the form of bacon.  Mmmm!, so good.</p>

<p><img src="http://i.imgur.com/AAdpY4Dl.jpg" alt="blues city deli" /></p>

<h4>Swag</h4>

<p>There was eventually a conference T-shirt.  Black.  With a coolish logo on it, that I had to ask about.  I'm still one of three people in the country who have not seen Stranger Things.  Apparently the logo was based on that show's logo.  There were a few vendors.  I got lucky with one of the contests.  That was awesome.  But holy cow, where were the stickers?  Apparently that's not a strong part of this conference's culture.  I got one cool sticker from Netflix -- Chaos Monkey :D.</p>

<h4>Party</h4>

<p>The conference party was at the singular City Museum.  It's not really a museum?  It's more like an anything-goes, go explore this, based on psychonauts concept art, adult playground.  I say adult because no where are predictable, little tikes-sized, plastic-covered platforms and slides.  Everything's made out of exposed rebar, inconvenient, twisted, gnarly, mixed with random art installments, and generally evoking of my laughter.  If you go to St. Louis, you just need to experience it.</p>

<p><img src="http://i.imgur.com/55iusyGl.jpg" alt="city museum st louis" /></p>

<p>In addition to the general review, here are some learnings that stood out to me:</p>

<h2>Some Favorite Talks</h2>

<h4><a href="https://youtu.be/DSjbTC-hvqQ">"Code is the Easy Part"</a> - Evan C - NoRedInk</h4>

<ul>
<li>Alternatives make each community stronger - we can gravitate around things we thing are good, beautiful, and we don't have to partake in what we don't like.  We don't have to rain on those parades either.</li>
<li>Are bigger teams better? "Not really" Some things that are great about Elm haven't really been matched over even long time periods and with many resources.  (eg, great error messages, fast rendering)  Can have great products from small teams.</li>
<li>Most people would judge a great open source project by those that get issues and resolve them immediately, keeping open issues at 0.  But Evan batches issues, letting them pile up, then designing around trends to maximize value and consider good design.</li>
<li>Upcoming versions of Elm will focus on: debugger, code swapping, server render, packages improvements</li>
</ul>


<h4><a href="https://youtu.be/IcgmSRJHu_8?list=PLglJM3BYAMPH2zuz1nbKHQyeawE4SN0Cd">"Making Impossible States Impossible"</a> - Richard Feldman - NoRedInk</h4>

<ul>
<li>Less to test is good. Nothing to test is better because it's impossible.</li>
<li>Expose functions to access data - can control data access, structure for upgrades and refactor</li>
<li>Make new types as combos of new fields are added to a data structure</li>
<li>Spend time to design data structures and types to only allow valid states</li>
</ul>


<p>Strange Loop and Elm Conf both did a great job hiring some solid videographers who did good video capture work and had it up incredibly fast.  I was browsing videos on Youtube at lunch that were just presented in the morning!</p>

<ul>
<li><a href="https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw/videos">Strange Loop on YouTube</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLglJM3BYAMPH2zuz1nbKHQyeawE4SN0Cd">Elm Conf on YouTube</a></li>
</ul>


<h2>Some Cool Ideas</h2>

<ul>
<li>NoRedInk - Hiring after Elm adoption expanded greatly - "python paradox" - no programmers, but easier to hire/find a team because of tech interest and niche. (segment from <a href="https://www.youtube.com/watch?v=LCNs92YQjhw&amp;feature=youtu.be&amp;t=7m55s">"Elm conf Q&amp;A panel"</a> by Evan Czaplicki and Richard Feldman)</li>
<li>In elm, most things not be a component, but a "triplet" - model view update - (segment from <a href="https://www.youtube.com/watch?v=LCNs92YQjhw&amp;feature=youtu.be&amp;t=21m09s">"Elm conf Q&amp;A panel"</a> by Ossi)</li>
<li>Local concision is nice - I don't have to visit tons of files to make a change (eg, EJB) (somewhere in <a href="https://www.youtube.com/watch?v=VNTQ-M_uSo8&amp;feature=youtu.be">"Agility and Robustness: Clojure spec"</a> by Stuart Holloway)</li>
<li>Clojure spec attempts to find a best-of-both world approach, being a thing kind of like typings and kind of like example testing.  Maintains generalized systems, dynamic types of clojure.  But allows for specificity, such as data shape definitions where desired.  Seems like it could be really cool.  A bit of a mind blow.  (segment from <a href="https://www.youtube.com/watch?v=VNTQ-M_uSo8&amp;feature=youtu.be&amp;t=9m09s">"Agility and Robustness: Clojure spec"</a> by Stuart Holloway)</li>
<li>Some well-loved tools (eg, React, Gemfile, and Git) are loved by us because they use pure functions leading to better mental models.  Obvious looking back, but was non-obvious to start.  We should build more tools this way. (<a href="https://mobile.twitter.com/garybernhardt/status/777901423220490240">tweet</a> about "Reproducability" by Gary Bernhardt)</li>
<li>Parable of pumpkin carver (segment from <a href="https://www.youtube.com/watch?v=_1rh_s1WmRA&amp;feature=youtu.be&amp;t=22m25s">"A Frontend Server, Front to Back"</a> by Zach Tellman)</li>
<li>Nice to have abstractions, but it might be too much work to build a "big tower of abstraction" with a bunch of new terms and concepts just for 300 lines of well-factored code. (somewhere in <a href="https://www.youtube.com/watch?v=_1rh_s1WmRA&amp;feature=youtu.be">"A Frontend Server, Front to Back"</a> by Zach Tellman)</li>
</ul>


<h2>Some Cool Projects</h2>

<ul>
<li><a href="https://github.com/sporto/hop">hop</a> - elm router</li>
<li><a href="https://github.com/mdgriffith/elm-style-animation">elm-style-animation</a> - tweeing values for animation</li>
<li><a href="https://github.com/abadi199/elm-horizon">elm-horizon</a> - serverless realtime frontend experiment</li>
<li><a href="https://www.atomist.com/">atomist</a> - yet-to-be-released  project for elm code gen <a href="https://youtu.be/jJ4e6cIBgYM">demo talk</a></li>
<li><a href="http://petstore.swagger.io/#/">swagger.io</a> - API documentation</li>
<li><a href="http://johnny-five.io/">johnny-five</a> - write nodejs on top of arduinos</li>
<li><a href="https://ravichugh.github.io/sketch-n-sketch/">sketch-n-sketch</a> - prototype tool for syncing code and direct manipulation tools for making vector art <a href="https://www.youtube.com/watch?v=YuGVC8VqXz0">demo talk</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fluent Conf Review]]></title>
    <link href="http://jaketrent.com/post/fluent-conf-review/"/>
    <updated>2016-03-15T06:37:00-06:00</updated>
    <id>http://jaketrent.com/post/fluent-conf-review</id>
    <content type="html"><![CDATA[<p>I went to my first <a href="http://conferences.oreilly.com/fluent/javascript-html-us">Fluent conf</a> this year.  It was a generally good experience.  I enjoyed the company and the topics.  Maybe I'll go again.</p>

<p><img src="http://i.imgur.com/aG1CC3U.jpg" alt="Fluent Conf" /></p>

<!--more-->


<h2>Training</h2>

<p>I went to the one-day training before the conference, where there were half and quarter day sessions around a single topic.  I went to an awesome "Building a desktop app with Electron" training, where the content was great, the teacher, Steve Kinney, was exceptional, and I felt accomplished as we learned new things and got to create something together with my own typing fingers.  It went very quickly and probably could have been a bit more solid with even a full day of training.</p>

<p>I did two other trainings that weren't nearly as good.  The people were smart, imparting what obviously took some brains to figure out, but they weren't engaging as teachers and couldn't capture my attention well enough to make me feel like I was along for the ride.  Pre-conference prep material suggested that we'd be producing something together in these sessions as in the Electron session.  That would have been awesome.  I am a kinetic learner.  Unfortunately, there was no attempt to build upon pre-session work, and both other sessions felt dull in comparison to the morning's ride.</p>

<h2>Keynotes</h2>

<p>The mix of keynotes was great at the conference.  There were some heavy hitters: Brendan Eich and Doug Crockford.  There were some new, refreshing faces and topics from the likes of Laurie Voss and Alex Russell.  The keynotes were shorter than others I've seen -- shorter than even the other sessions.  They felt almost like lightning talks, but from big web tech personalities.  The content was varied.  The delivery was all very good.  These were high points in the conference.</p>

<h2>Sessions</h2>

<p>The sessions were mostly good.  I have a general like-dislike relationship with conference talks.  I have to remember that the point is not to be permanently changed at the end of the talk or to have immediately picked up some great new skill.  The probable best place that I can be at the end of a session is inspired, pointed in a new, interesting direction, with enough information to know what I don't know and go figure it out.</p>

<p>There was a ton of content, with 6 tracks most hours.  Some of the highlight talks that I went to were: "This talk is not available offline", by Alex Rickabaugh, talking about "Progressive Web Apps", Service Workers, and how to create a more native-like web experience; "How to write a worthwhile test", by Justin Searls, which was chock full of valuable insight for test creation and tooling; and "Building our reactive future", by Matthew Podwysocki, talking about Rx.js and how Observables are expressive coding constructs -- he was hilarious too.  I'm sure I missed some other great ones.  Should I have bought that expensive "watch the recorded videos later" package?</p>

<p>I did attend a few less-than-stellar sessions, during which I read all the docs on <a href="http://cycle.js.org/">Cycle.js</a> and worked through all the examples.  It's a super interesting framework and fit in with a large tech theme from the conference, <a href="http://reactivex.io/documentation/observable.html">Observables</a>.</p>

<h2>Venue</h2>

<p>San Fransisco is a fun city.  I love walking around the city.  It was unfortunately unusually overcast and drizzly weather while we were there.  We had less rain than was forecast, so that was good, and we were able to get out into the city at night.  Perhaps because of all the cloud cover, it seemed like it was always super late by the time we got out.</p>

<p>The conference was all held inside the Marriot Marquee.  It was held in the basement.  There were no windows.  Thankfully, they had good HVAC to mostly evacuate all the nerd smell.  It was funny going in the first time, because you go down about 3 flights of escalators, making it feel like you're on your way to the subway.  I don't know how many 1000+ attendees there were, but it was amazing that the hotel had that much space.  The basement must have extended underground underneath the adjoining plaza.  The Marriot was nice.  The staff were very friendly.  There was the strict policing of badge checking at most entrances -- that was annoying.</p>

<p>Getting to and from San Fransisco proved laborious with a hefty layover on the way in and a hefty delay getting out, due to weather.  This task alone made me consider just buying the virtual conference option next time.  It was fun to meet a bunch of people from all over the globe though.  Perhaps they could all come visit me in the Rocky Mountains next time, and we could party here.</p>

<h2>Food</h2>

<p>Lunches were good.  The food was good and interesting.  The lines went quickly, especially on day 2, where it seemed that they had 12 independent lines for lunch.  That was awesome.  Apparently I just got lucky the first day.  There were enough people that a proper dinner and after party didn't happen.  There was a reception the first night, which consisted of an hour of other people drinking alcohol.  I had a water.  Water from Norway never tasted so good.</p>

<h2>Swag</h2>

<p>The conference gave out water bottles.  They were on a shelf in the hall.  Oh, and they gave out name tags.  Beyond that, there was an exhibition hall with vendors giving out the usual -- stickers, t-shirts, and trinkets.  I love a good sticker and found quite a few.  Github had the best.  Codeschool had some awesome ones too, such as 80s neon "Staying Sharp with Angular".  So good.  I also replenished my summer wardrobe of T-shirts.  Heroku did go beyond T-shirts, which is a trend we should encourage, and now I have some rockin' purple socks.</p>

<h2>Going Again</h2>

<p>Fluent was a great experience and a highlight web conference for the year.  I've heard it has been even better in years past.  It's probable that I'd go again to try it out again and hope for an even better experience.  Thanks, Fluent, and I'll see you next time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React Rally Review]]></title>
    <link href="http://jaketrent.com/post/react-rally-review/"/>
    <updated>2015-08-27T09:03:00-06:00</updated>
    <id>http://jaketrent.com/post/react-rally-review</id>
    <content type="html"><![CDATA[<p>React Rally is a developer conference created around the library of <a href="http://facebook.github.io/react/">React.js</a> and the community that uses it.  It was the first of its name.  It was the first React-centric conference in Salt Lake City.  I had a great time.  Here are a few of reasons I liked it.</p>

<p><img src="http://i.imgur.com/B8fFS4J.jpg" alt="react rally" /></p>

<!--more-->


<h2>People Breakouts</h2>

<p>It was a happy conference.  A great mood was set by <a href="https://twitter.com/jergason">Jamison</a> on stage, who MC'ed most of the conference.  He's a fun, quirky guy who's not self-important and who did a great job putting speakers and the audience at ease.  There were a ton of participants and attendees at the conference that also fit this (good!) description.  This led to great conversation between sessions.  There were plenty of breaks, some 30 or 60 minutes at a time.  They were well-spaced, allowing plenty of time.  There was a pleasant <a href="http://rangle.io/">Rangle.io</a>-sponsored lounge to gather in.</p>

<p>There were no on-stage questions and answers portions at the end of the talks.  I wondered how I'd like this, since who doesn't like answer to their questions, right?  It turned out to be refreshing.  Speakers finished their talks at the appointed time.  No one had to wait around uncomfortably wondering when either the speaker or the audience would let everyone else off the hook.  No embarrassing questions.  It was nice.  All the speakers were great anyway, but I think this feature also helped prime the conversations that were expected to happen after the talks in the breakouts, giving extra motivation for everyone to be available and approachable.</p>

<h2>The Spoken Word</h2>

<p>I was excited going into the conference because of the solid lineup of speakers.  Not all the talks were the best I had heard or the best treatment of every subject.  There were some highlights thought, and on the whole it was really, really good.  Each of the speakers had obviously prepared a great deal and had taken their time on stage seriously (or not seriously in the case of <a href="https://twitter.com/djsmith42">Dave Smith</a>, whose talk was memorable and awesome as well, btw).</p>

<p>The conference wasn't wholly about React.  There's just so much <em>around</em> React that is exciting.  The community is pushing boundaries all over the place.  (And <em>still</em> all the content in the conference was appropriate, yay! :)  For instance, there were a great many mentions of <a href="http://elm-lang.org/">Elm</a>.  For my part, I spent much of the conference tinkering with that very thing.</p>

<h2>Fun Design</h2>

<p>It'll reveal how much art does for me, but when I first learned about the conference, one of the things that excited me the most was the <a href="http://www.reactrally.com/">website</a>.  It had a fun design!  There were illustrations, interesting colors, and it looked like a fun theme.  (Of course, at the time there was literally nothing else to be excited about outside the mailing list input box.)</p>

<p>We need more illustrations.  We need more mascots.  A menacing purple squid with a React symbol on its forehead?  Yes, please!  My previously bare brushed metal laptop lid is now bestickered with the sweetest conference stickers I have.  So fun!</p>

<p>I'm still not sure what the theme was intended to be.  My interpretation was Creatures of the Black Lagoon in Space.  Right?!</p>

<h2>Feels Like the First Time</h2>

<p>The organizers did a great job.  The preparation was obvious.  They assured me they were putting out fires for the duration of the two days.  That was not apparent.  The thing went off without a hitch.  I can only poke at the annoying AV glitch of a blinky project screen in some talks.</p>

<p>Everything seemed in its place.  The conference was small, about 250 participants, and it seemed like a large house party most of the time.  The venue was prepped very well.  I'm glad they opened up the downstairs lounge.  The food was great.  The breakfast trucks were a wonderful touch, especially <a href="http://saturdayswaffle.com/">Saturdays Waffles</a> day.  Mmmmm, waffles.  The gift card for lunch was a thoughtful touch.  <a href="http://www.yelp.com/biz/atlantic-caf%C3%A9-and-market-salt-lake-city-4">Atlantic Cafe</a> provided my delicious cevapi sausage on the 2nd day.</p>

<p>I have many thanks for the great speakers, the effort of the organizers, and everyone in between that made the 2 days great.  I felt inspired.  I left more informed.  I met a group of fantastic people.  It's been my favorite conference in Salt Lake City so far.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA["12-Factor App" Summary]]></title>
    <link href="http://jaketrent.com/post/12-factor-app-summary/"/>
    <updated>2015-02-28T16:20:00-07:00</updated>
    <id>http://jaketrent.com/post/12-factor-app-summary</id>
    <content type="html"><![CDATA[<p>I recently had a chance to go through the principles of the 12-Factor App as listed on <a href="http://12factor.net/">12factor.net</a>.  It's written by some of the fine folk at Heroku.  The principles describe the best practices they see for how to get a modern web app deployed properly.  It's a short read.  This summary is even shorter.</p>

<p><img src="http://i.imgur.com/8aY0qiD.jpg" alt="12 Factors" /></p>

<!--more-->


<h5>1. Codebase</h5>

<ul>
<li>Always in src ctrl</li>
<li>One codebase per app (many repos = distributed system)</li>
<li>A deploy = instance of app running</li>
</ul>


<h5>2. Dependencies</h5>

<ul>
<li>All app and system dependencies explicitly declared</li>
<li>Do not dep on implicit existence of system tools (eg, ImageMagick)</li>
<li>Required sys tools vendored into app</li>
</ul>


<h5>3. Config</h5>

<ul>
<li>Strict separation between code and config</li>
<li>Config stored in env vars</li>
</ul>


<h5>4. Backing Services</h5>

<ul>
<li>Should be loosely coupled, swappable</li>
<li>Changes in services (eg, db) should not require code change</li>
</ul>


<h5>5. Build, release, run</h5>

<ul>
<li>Strict separation: build (binary), release (binary + env config), run (exec runtime)</li>
<li>Ordered -- can't make change upstream</li>
<li>Every release has unique id</li>
</ul>


<h5>6. Processes</h5>

<ul>
<li>Independent, stateless, share nothing</li>
<li>Sharing happens in backing service (eg, db)</li>
<li>No sticky sessions w/ process affinity</li>
</ul>


<h5>7. Port Binding</h5>

<ul>
<li>Can talk a protocol (eg, HTTP) by binding comm to a port</li>
<li>Allows an app to become a backing service for another app via a url</li>
<li>What does the alternative look like here?  Seems like a given.</li>
</ul>


<h5>8. Concurrency</h5>

<ul>
<li>Process is first-class citizen patterned after unix service daemons</li>
<li>Process can multiplex internally (eg, threads or something like node.js)</li>
<li>Scaling becomes a simple addition of the same process</li>
</ul>


<h5>9. Disposability</h5>

<ul>
<li>Startups are fast</li>
<li>Requests are short</li>
<li>Shutdowns are graceful; requests can finish; jobs returned to queue</li>
</ul>


<h5>10. Dev/Prod Parity</h5>

<ul>
<li>Time from dev to prod deploy should be short (eg, hrs)</li>
<li>Devs who wrote the code should be around to op the code</li>
<li>Toolchains and tech stacks should be as similar as possible</li>
<li>Backing servies should be the same, even if adapters supposedly abstract implementations</li>
</ul>


<h5>11. Logs</h5>

<ul>
<li>Logs are treated as streams, simply written by an app to stdout</li>
<li>Let log storage, collating, and analysis be done in the env or or w/ other tools</li>
<li>Logs should provide visibility to how an app works over time</li>
</ul>


<h5>12. Admin Processes</h5>

<ul>
<li>Run as one-off processes in REPL</li>
<li>Env shares same code and config as long-running processes</li>
</ul>


<p>If you have the extra little time required, I encourage you to check out <a href="http://12factor.net/">12factor.net</a> and draw some of your own conclusions.</p>

<p>What other insights do you have on these principles?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ideas From The Accidental Creative]]></title>
    <link href="http://jaketrent.com/post/ideas-from-accidental-creative/"/>
    <updated>2014-12-10T14:27:00-07:00</updated>
    <id>http://jaketrent.com/post/ideas-from-accidental-creative</id>
    <content type="html"><![CDATA[<p>I just finished a book about becoming a more productive and effective creative person, called “The Accidental Creative”.  It was a great book and included some thoughtful ideas that I ended up pondering and have started incorporating into my life.</p>

<p><img src="http://i.imgur.com/S3LkEjQ.jpg" alt="The Accidental Creative" /></p>

<!--more-->


<p>What follows are the big ideas from the book, broken into the areas that the author had identified and my short take on what each of them is or has the potential to benefit.</p>

<h2>Focus</h2>

<p><strong>Challenges</strong> - Define what you’re working on the big statements, sometimes in the form of questions, around what you’re focused on solving.</p>

<p><strong>The Big 3</strong> - Refine what you will actually tackle by aligning the efforts with what you’ve identified as your important work.</p>

<p><strong>Clustering</strong> - Avoid the frenetic task switching and the associated productivity penalties by scheduling single activities in order to deep and flow with your ideas.</p>

<h2>Relationships</h2>

<p><strong>Circles</strong> - Identify and regularly meet with people with similar interest with whom you can combine creative power and generate and vet new ideas.</p>

<p><strong>Head-to-heads</strong> - One-on-one meetings of people between who there is mutual respect in order to share as much value in the form of ideas and creative thought as possible.</p>

<p><strong>Core Team</strong> - Identify a handful of people in your life whose opinion and experience you value so much that you will trust yourself to be guided by their input on important decisions and life events.</p>

<h2>Energy</h2>

<p><strong>Whole-life Planning</strong> - Don’t pretend you can compartmentalize work and other parts of your life separately.  Rather, schedule and plan these things together to get a full picture of all important work you’re involved in.</p>

<p><strong>Pruning</strong> - Remove the things from your life that don’t match your big 3 or that are excessive energy drains in order to open possibilities for better/more results in areas that really matter to you.</p>

<h2>Stimuli</h2>

<p><strong>Study Plan</strong> - Have scheduled time to ingest new ideas and learn new things.</p>

<p><strong>Notation</strong> - In an effort to really digest what you experience, take notes and review them in order to understand more fully, remember, and let what you encounter change you for the better.</p>

<p><strong>Purposeful Experience</strong> - Filter the over-abundance of stimuli available to you and be intentional about what you experience, feeding your most important needs and efforts.</p>

<h2>Hours</h2>

<p><strong>Idea Time</strong> - Great ideas are important to the value you generate in your work, so actually schedule time to do nothing but  ponder and generate new ideas specifically for the future.</p>

<p><strong>Unnecessary Creating</strong> - Often what used to be a fulfilling creation activity for someone becomes drudgery and work without remembering what it feels like to just create without the pressure of the end product.</p>

<p>Have you read this book?  Others like it?  What are the practices that you’ve ended up incorporating, and how have you seen the benefits?</p>
]]></content>
  </entry>
  
</feed>
