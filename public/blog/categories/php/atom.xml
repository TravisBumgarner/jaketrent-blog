<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: php | Jake Trent]]></title>
  <link href="http://jaketrent.com/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://jaketrent.com/"/>
  <updated>2013-05-29T07:37:01-06:00</updated>
  <id>http://jaketrent.com/</id>
  <author>
    <name><![CDATA[Jake Trent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress vs. WordPress]]></title>
    <link href="http://jaketrent.com/post/octopress-vs-wordpress/"/>
    <updated>2012-11-12T16:42:00-07:00</updated>
    <id>http://jaketrent.com/post/octopress-vs-wordpress</id>
    <content type="html"><![CDATA[<p>Why would one choose Octopress over WordPress?  What are the pros and cons?  I've recently implemented a blog -- this blog -- in WordPress.  It was a difficult decision for me.  At the time, I looked at Octopress, but I was jazzed by the success of others on WordPress, and I wanted to try it out.  I'm glad that I did try it out, but now I'm glad that I've switched to Octopress.  Here's why.</p>

<p><img src="http://i.imgur.com/uACBn.jpg" alt="Octopress" /></p>

<!--more-->


<h2>Just Posts</h2>

<p>Octopress is so dead simple, it just makes sense.  The post is a file in a folder.  I edit it in my current favorite MarkDown editor, <a href="http://mouapp.com/">Mou</a>.  The workflow is thus very easy.  I'm not transferring my post which I wrote offline to a web interface only available online.</p>

<h2>Nerd Cred</h2>

<p>Nerd cred or geek cred?  I don't know, but Octopress bumps it right up.  As it says, it's a "blogging framework for hackers".  Given that I'm a creator of software and that's the main topic of my blog, it seems fitting, doesn't it.  Plenty of coders have WordPress sites, I suppose.  Still, I didn't feel super awesome about running a WordPress PHP site as my home base.</p>

<h2>Performance</h2>

<p>The whole idea of a generated static site seems genius.  It's blazing fast.  I'm on Heroku.  Currently, my site experiences very low volume traffic.  With one dyno, when the site goes without traffic for a certain amount of time, Heroku will power down the dyno.  WordPress takes a fair bit to come back up on the first request after that.  Octopress, no problem.  Pops back like it was never gone.  And why not?  There's really nothing to spin up.</p>

<h2>No Reinvention</h2>

<p>I landed on Octopress for one of the same reasons I initially chose WordPress for this new blog.  It is a ready-made blogging platform.  I don't need to reinvent the wheel.  It works, and it works well.</p>

<h2>A Bit of Customization</h2>

<p>I chose WordPress for the blog because I wanted to write blog posts, not tinker with the innards of the site.  (I do that plenty elsewhere.)  But it turns out that I couldn't quite bare just using an out-of-the-box theme.  I literally needed to add my own flair and customizations.  I still want to keep that to a minimum.  Octopress' classic theme (the only one?) is fantastic -- clean and crisp.  When I want to make a few changes, it's a much more straight-forward task to find the place that needs editing and get it done.</p>

<h2>Ruby</h2>

<p>I've hardly done any Ruby.  Octopress is an easy little touch of Ruby.  I don't have to mess with it unless I want to.  Ruby is much more appealing to me than PHP.</p>

<h2>Plugin Pluses</h2>

<p>When I chose WordPress, I figured that if there was any feature that I desired, there was probably already a plugin for it.  And that turned out to be true.  Octopress certainly <a href="https://github.com/imathis/octopress/wiki/3rd-party-plugins">has fewer options</a>.  But on the whole, I think they cater well to the coder crowd.</p>

<h2>For Now</h2>

<p>So, for now, I'm on Octopress.  It's nice to think that my data is just a folder of files that I could really recreate anywhere.  So, we'll see how long this lasts.  So far, it's a blogging platform for this hacker, and I'm liking it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I Chose a WordPress Blog]]></title>
    <link href="http://jaketrent.com/post/why-i-chose-a-wordpress-blog/"/>
    <updated>2012-09-25T16:49:00-06:00</updated>
    <id>http://jaketrent.com/post/why-i-chose-a-wordpress-blog</id>
    <content type="html"><![CDATA[<p>Some might ask why a guy who loves his life of code would choose WordPress as the framework for one of his websites. Well, I chose a WordPress blog. I almost didn't. It's been a long time coming. It's early in the game, but I think it was a good choice.</p>

<p><img src="http://i.imgur.com/Z9HMK.jpg" alt="WordPress T-Shirt" />
http://flic.kr/p/6FFZMy</p>

<!--more-->


<h2>Why I wouldn't choose WordPress blog</h2>

<p>I only had one job about 7 years back that consisted of mostly PHP. The job was great for many reasons. PHP wasn't the highlight. We did some cool stuff with it. At the time, it was all right. Since, I have coded full time in Java, Python, XQuery, or JavaScript. I would count each as <strong>more</strong> enjoyable than PHP.</p>

<p>Secondly, I'm a coder. I love to build stuff. Custom software is way more fun than boxed software. WordPress is something that is literally accessible to anyone that's just computer savvy. I'm not breaking new ground on WordPress.</p>

<h2>An insightful article</h2>

<p>A week or so ago, I ran into an article on a site called "Virtuous Code". That site name was cool enough. The article was typed ("penned" is such a cooler word) by Avdi Grimm and is named <a href="http://devblog.avdi.org/2012/08/09/why-wordpress/">"Why WordPress"</a>. I was caught off guard by how well it described my personal predicament.</p>

<h2>Why I chose a WordPress blog</h2>

<p>When I read Avid's article, I realized that the reasons I, as a coder, had been avoiding WordPress were the very reasons I should embrace it:</p>

<ol>
<li>As a coder, my tendency to jump into the internals and start toying around is strong. This hinders my writing ability. It competes for my time. Writing is something that I really want to do more of. By choosing a package that's tied up with a bow will encourage me to just use it instead of over-customize it. And since the innards of the package is a language that I don't want to devote a ton of my time to, I'm even less inclined to customize it.</li>
<li>PHP and WordPress are, in a way, like JavaScript -- they're everwhere, and everyone is using them. This means that probably just about everything that I could imagine wanting (ok, I'll probably come up with something innane) on a blog has already been built. I don't need to reinvent it.</li>
</ol>


<h2>Driven to the edge</h2>

<p>So, I made the jump. I just downloaded the latest <a href="http:://wordpress.org">WordPress.org</a> package. I ran Apache on my local box and pointed my browser to <code>localhost:8888</code>. I was presented with the pleasant admin UI. I chose a new theme. It installed in place. It was a 2-click ordeal. I chose a few plugins to replace default functionality and add a bit more. I was pleasantly surprised by the smoothness of it all.</p>

<p>At the point I was getting the blog looking nice and doing what I wanted, did I care that the thing was written in PHP? No. I saw it just once when setting up my DB connection. I did cringe slightly upon seeing some <a href="http://php.net/manual/en/language.variables.superglobals.php">super globals</a> again (<code>$_SERVER</code>), but I hastily committed the change and deployed the app.</p>

<p>We'll see if I continue to love it, but so far, so good. My fellow coders, I ask: Is my reasoning sound?</p>
]]></content>
  </entry>
  
</feed>
